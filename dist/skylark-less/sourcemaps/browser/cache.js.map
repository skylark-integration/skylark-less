{"version":3,"sources":["browser/cache.js"],"names":["module","exports","window","options","logger","cache","env","localStorage","_","setCSS","path","lastModified","modifyVars","styles","info","setItem","JSON","stringify","e","error","getCSS","webInfo","css","getItem","timestamp","vars","Date","valueOf"],"mappings":";;;;;;;AAAAA,OAAOC,QAAU,SAAUC,EAAQC,EAASC,GACxC,IAAIC,EAAQ,KACZ,GAAoB,gBAAhBF,EAAQG,IACR,IACID,OAAuC,IAAxBH,EAAOK,aAA+B,KAAOL,EAAOK,aACrE,MAAOC,IAGb,OACIC,OAAQ,SAAUC,EAAMC,EAAcC,EAAYC,GAC9C,GAAIR,EAAO,CACPD,EAAOU,KAAK,UAAYJ,EAAO,cAC/B,IACIL,EAAMU,QAAQL,EAAMG,GACpBR,EAAMU,QAAQL,EAAO,aAAcC,GAC/BC,GACAP,EAAMU,QAAQL,EAAO,QAASM,KAAKC,UAAUL,IAEnD,MAAOM,GACLd,EAAOe,MAAM,mBAAqBT,EAAO,sCAIrDU,OAAQ,SAAUV,EAAMW,EAAST,GAC7B,IAAIU,EAAMjB,GAASA,EAAMkB,QAAQb,GAAOc,EAAYnB,GAASA,EAAMkB,QAAQb,EAAO,cAAee,EAAOpB,GAASA,EAAMkB,QAAQb,EAAO,SAGtI,GAFAE,EAAaA,MACba,EAAOA,GAAQ,KACXD,GAAaH,EAAQV,cAAgB,IAAIe,KAAKL,EAAQV,cAAcgB,YAAc,IAAID,KAAKF,GAAWG,WAAaX,KAAKC,UAAUL,KAAgBa,EAClJ,OAAOH","file":"../../browser/cache.js","sourcesContent":["module.exports = function (window, options, logger) {\n    var cache = null;\n    if (options.env !== 'development') {\n        try {\n            cache = typeof window.localStorage === 'undefined' ? null : window.localStorage;\n        } catch (_) {\n        }\n    }\n    return {\n        setCSS: function (path, lastModified, modifyVars, styles) {\n            if (cache) {\n                logger.info('saving ' + path + ' to cache.');\n                try {\n                    cache.setItem(path, styles);\n                    cache.setItem(path + ':timestamp', lastModified);\n                    if (modifyVars) {\n                        cache.setItem(path + ':vars', JSON.stringify(modifyVars));\n                    }\n                } catch (e) {\n                    logger.error('failed to save \"' + path + '\" to local storage for caching.');\n                }\n            }\n        },\n        getCSS: function (path, webInfo, modifyVars) {\n            var css = cache && cache.getItem(path), timestamp = cache && cache.getItem(path + ':timestamp'), vars = cache && cache.getItem(path + ':vars');\n            modifyVars = modifyVars || {};\n            vars = vars || '{}';\n            if (timestamp && webInfo.lastModified && new Date(webInfo.lastModified).valueOf() === new Date(timestamp).valueOf() && JSON.stringify(modifyVars) === vars) {\n                return css;\n            }\n        }\n    };\n};"]}