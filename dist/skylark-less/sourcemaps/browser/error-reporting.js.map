{"version":3,"sources":["browser/error-reporting.js"],"names":["define","__module__0","__module__1","exports","module","utils","browser","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","window","less","options","add","e","rootHref","errorReporting","filename","errors","content","type","message","errorline","i","classname","undefined","extract","push","replace","parseInt","line","column","join","stack","logLevel","logger","error","errorConsole","timer","id","extractId","elem","document","createElement","filenameNoPath","match","className","split","slice","innerHTML","createCSS","title","style","cssText","env","setInterval","body","getElementById","replaceChild","insertBefore","firstChild","clearInterval","errorHTML","remove","path","node","parentNode","removeChild","removeErrorHTML"],"mappings":"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","file":"../../browser/error-reporting.js","sourcesContent":["define([\n    './utils',\n    './browser'\n], function (__module__0, __module__1) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var utils = __module__0, browser = __module__1;\n    module.exports = function (window, less, options) {\n        function errorHTML(e, rootHref) {\n            var id = 'less-error-message:' + utils.extractId(rootHref || '');\n            var template = '<li><label>{line}</label><pre class=\"{class}\">{content}</pre></li>';\n            var elem = window.document.createElement('div'), timer, content, errors = [];\n            var filename = e.filename || rootHref;\n            var filenameNoPath = filename.match(/([^\\/]+(\\?.*)?)$/)[1];\n            elem.id = id;\n            elem.className = 'less-error-message';\n            content = '<h3>' + (e.type || 'Syntax') + 'Error: ' + (e.message || 'There is an error in your .less file') + '</h3>' + '<p>in <a href=\"' + filename + '\">' + filenameNoPath + '</a> ';\n            var errorline = function (e, i, classname) {\n                if (e.extract[i] !== undefined) {\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1)).replace(/\\{class\\}/, classname).replace(/\\{content\\}/, e.extract[i]));\n                }\n            };\n            if (e.line) {\n                errorline(e, 0, '');\n                errorline(e, 1, 'line');\n                errorline(e, 2, '');\n                content += 'on line ' + e.line + ', column ' + (e.column + 1) + ':</p>' + '<ul>' + errors.join('') + '</ul>';\n            }\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\n                content += '<br/>Stack Trace</br />' + e.stack.split('\\n').slice(1).join('<br/>');\n            }\n            elem.innerHTML = content;\n            browser.createCSS(window.document, [\n                '.less-error-message ul, .less-error-message li {',\n                'list-style-type: none;',\n                'margin-right: 15px;',\n                'padding: 4px 0;',\n                'margin: 0;',\n                '}',\n                '.less-error-message label {',\n                'font-size: 12px;',\n                'margin-right: 15px;',\n                'padding: 4px 0;',\n                'color: #cc7777;',\n                '}',\n                '.less-error-message pre {',\n                'color: #dd6666;',\n                'padding: 4px 0;',\n                'margin: 0;',\n                'display: inline-block;',\n                '}',\n                '.less-error-message pre.line {',\n                'color: #ff0000;',\n                '}',\n                '.less-error-message h3 {',\n                'font-size: 20px;',\n                'font-weight: bold;',\n                'padding: 15px 0 5px 0;',\n                'margin: 0;',\n                '}',\n                '.less-error-message a {',\n                'color: #10a',\n                '}',\n                '.less-error-message .error {',\n                'color: red;',\n                'font-weight: bold;',\n                'padding-bottom: 2px;',\n                'border-bottom: 1px dashed red;',\n                '}'\n            ].join('\\n'), { title: 'error-message' });\n            elem.style.cssText = [\n                'font-family: Arial, sans-serif',\n                'border: 1px solid #e00',\n                'background-color: #eee',\n                'border-radius: 5px',\n                '-webkit-border-radius: 5px',\n                '-moz-border-radius: 5px',\n                'color: #e00',\n                'padding: 15px',\n                'margin-bottom: 15px'\n            ].join(';');\n            if (options.env === 'development') {\n                timer = setInterval(function () {\n                    var document = window.document, body = document.body;\n                    if (body) {\n                        if (document.getElementById(id)) {\n                            body.replaceChild(elem, document.getElementById(id));\n                        } else {\n                            body.insertBefore(elem, body.firstChild);\n                        }\n                        clearInterval(timer);\n                    }\n                }, 10);\n            }\n        }\n        function removeErrorHTML(path) {\n            var node = window.document.getElementById('less-error-message:' + utils.extractId(path));\n            if (node) {\n                node.parentNode.removeChild(node);\n            }\n        }\n        function removeErrorConsole(path) {\n        }\n        function removeError(path) {\n            if (!options.errorReporting || options.errorReporting === 'html') {\n                removeErrorHTML(path);\n            } else if (options.errorReporting === 'console') {\n                removeErrorConsole(path);\n            } else if (typeof options.errorReporting === 'function') {\n                options.errorReporting('remove', path);\n            }\n        }\n        function errorConsole(e, rootHref) {\n            var template = '{line} {content}';\n            var filename = e.filename || rootHref;\n            var errors = [];\n            var content = (e.type || 'Syntax') + 'Error: ' + (e.message || 'There is an error in your .less file') + ' in ' + filename;\n            var errorline = function (e, i, classname) {\n                if (e.extract[i] !== undefined) {\n                    errors.push(template.replace(/\\{line\\}/, (parseInt(e.line, 10) || 0) + (i - 1)).replace(/\\{class\\}/, classname).replace(/\\{content\\}/, e.extract[i]));\n                }\n            };\n            if (e.line) {\n                errorline(e, 0, '');\n                errorline(e, 1, 'line');\n                errorline(e, 2, '');\n                content += ' on line ' + e.line + ', column ' + (e.column + 1) + ':\\n' + errors.join('\\n');\n            }\n            if (e.stack && (e.extract || options.logLevel >= 4)) {\n                content += '\\nStack Trace\\n' + e.stack;\n            }\n            less.logger.error(content);\n        }\n        function error(e, rootHref) {\n            if (!options.errorReporting || options.errorReporting === 'html') {\n                errorHTML(e, rootHref);\n            } else if (options.errorReporting === 'console') {\n                errorConsole(e, rootHref);\n            } else if (typeof options.errorReporting === 'function') {\n                options.errorReporting('add', e, rootHref);\n            }\n        }\n        return {\n            add: error,\n            remove: removeError\n        };\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}