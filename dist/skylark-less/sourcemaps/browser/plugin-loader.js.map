{"version":3,"sources":["browser/plugin-loader.js"],"names":["AbstractPluginLoader","require","PluginLoader","less","this","prototype","loadPlugin","filename","basePath","context","environment","fileManager","Promise","fulfill","reject","loadFile","then","catch","module","exports"],"mappings":";;;;;;;AAAA,IAAIA,qBAAuBC,QAAQ,mDAC/BC,aAAe,SAAUC,GACzBC,KAAKD,KAAOA,GAEhBD,aAAaG,UAAY,IAAIL,qBAC7BE,aAAaG,UAAUC,WAAa,SAAUC,EAAUC,EAAUC,EAASC,EAAaC,GACpF,OAAO,IAAIC,QAAQ,SAAUC,EAASC,GAClCH,EAAYI,SAASR,EAAUC,EAAUC,EAASC,GAAaM,KAAKH,GAASI,MAAMH,MAG3FI,OAAOC,QAAUjB","file":"../../browser/plugin-loader.js","sourcesContent":["var AbstractPluginLoader = require('../engine/environment/abstract-plugin-loader.js');\nvar PluginLoader = function (less) {\n    this.less = less;\n};\nPluginLoader.prototype = new AbstractPluginLoader();\nPluginLoader.prototype.loadPlugin = function (filename, basePath, context, environment, fileManager) {\n    return new Promise(function (fulfill, reject) {\n        fileManager.loadFile(filename, basePath, context, environment).then(fulfill).catch(reject);\n    });\n};\nmodule.exports = PluginLoader;"]}