{"version":3,"sources":["browser/log-listener.js"],"names":["module","exports","less","options","logLevel","env","loggers","debug","msg","console","log","info","warn","error","i","length","logger","addListener"],"mappings":";;;;;;;AAAAA,OAAOC,QAAU,SAAUC,EAAMC,GAE7BA,EAAQC,cAAuC,IAArBD,EAAQC,SAA2BD,EAAQC,SAA2B,gBAAhBD,EAAQE,IADhD,EAAuC,EAE1EF,EAAQG,UACTH,EAAQG,UACAC,MAAO,SAAUC,GACTL,EAAQC,UALP,GAMDK,QAAQC,IAAIF,IAGpBG,KAAM,SAAUH,GACRL,EAAQC,UAVY,GAWpBK,QAAQC,IAAIF,IAGpBI,KAAM,SAAUJ,GACRL,EAAQC,UAf+B,GAgBvCK,QAAQG,KAAKJ,IAGrBK,MAAO,SAAUL,GACTL,EAAQC,UApBmD,GAqB3DK,QAAQI,MAAML,OAKlC,IAAK,IAAIM,EAAI,EAAGA,EAAIX,EAAQG,QAAQS,OAAQD,IACxCZ,EAAKc,OAAOC,YAAYd,EAAQG,QAAQQ","file":"../../browser/log-listener.js","sourcesContent":["module.exports = function (less, options) {\n    var logLevel_debug = 4, logLevel_info = 3, logLevel_warn = 2, logLevel_error = 1;\n    options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : options.env === 'development' ? logLevel_info : logLevel_error;\n    if (!options.loggers) {\n        options.loggers = [{\n                debug: function (msg) {\n                    if (options.logLevel >= logLevel_debug) {\n                        console.log(msg);\n                    }\n                },\n                info: function (msg) {\n                    if (options.logLevel >= logLevel_info) {\n                        console.log(msg);\n                    }\n                },\n                warn: function (msg) {\n                    if (options.logLevel >= logLevel_warn) {\n                        console.warn(msg);\n                    }\n                },\n                error: function (msg) {\n                    if (options.logLevel >= logLevel_error) {\n                        console.error(msg);\n                    }\n                }\n            }];\n    }\n    for (var i = 0; i < options.loggers.length; i++) {\n        less.logger.addListener(options.loggers[i]);\n    }\n};"]}