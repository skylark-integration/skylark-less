{"version":3,"sources":["browser/log-listener.js"],"names":["define","exports","module","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","less","options","logLevel","env","loggers","debug","msg","console","log","info","warn","error","i","length","logger","addListener"],"mappings":";;;;;;;AAAAA,UAAW,WACP,aACA,IAAIC,KACAC,GAAWD,YAsCf,SAASE,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAxCAF,EAAOD,QAAU,SAAUQ,EAAMC,GAE7BA,EAAQC,cAAuC,IAArBD,EAAQC,SAA2BD,EAAQC,SAA2B,gBAAhBD,EAAQE,IADhD,EAAuC,EAE1EF,EAAQG,UACTH,EAAQG,UACAC,MAAO,SAAUC,GACTL,EAAQC,UALP,GAMDK,QAAQC,IAAIF,IAGpBG,KAAM,SAAUH,GACRL,EAAQC,UAVY,GAWpBK,QAAQC,IAAIF,IAGpBI,KAAM,SAAUJ,GACRL,EAAQC,UAf+B,GAgBvCK,QAAQG,KAAKJ,IAGrBK,MAAO,SAAUL,GACTL,EAAQC,UApBmD,GAqB3DK,QAAQI,MAAML,OAKlC,IAAK,IAAIM,EAAI,EAAGA,EAAIX,EAAQG,QAAQS,OAAQD,IACxCZ,EAAKc,OAAOC,YAAYd,EAAQG,QAAQQ,KAY5ClB,EAAkBD,EAAOD,SAClBC,EAAOD,QACTE,EAAkBF,GAChBA,OADN","file":"../../browser/log-listener.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    module.exports = function (less, options) {\n        var logLevel_debug = 4, logLevel_info = 3, logLevel_warn = 2, logLevel_error = 1;\n        options.logLevel = typeof options.logLevel !== 'undefined' ? options.logLevel : options.env === 'development' ? logLevel_info : logLevel_error;\n        if (!options.loggers) {\n            options.loggers = [{\n                    debug: function (msg) {\n                        if (options.logLevel >= logLevel_debug) {\n                            console.log(msg);\n                        }\n                    },\n                    info: function (msg) {\n                        if (options.logLevel >= logLevel_info) {\n                            console.log(msg);\n                        }\n                    },\n                    warn: function (msg) {\n                        if (options.logLevel >= logLevel_warn) {\n                            console.warn(msg);\n                        }\n                    },\n                    error: function (msg) {\n                        if (options.logLevel >= logLevel_error) {\n                            console.error(msg);\n                        }\n                    }\n                }];\n        }\n        for (var i = 0; i < options.loggers.length; i++) {\n            less.logger.addListener(options.loggers[i]);\n        }\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}