{"version":3,"sources":["engine/source-map-builder.js"],"names":["define","exports","module","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","SourceMapOutput","environment","SourceMapBuilder","options","this","prototype","toCSS","rootNode","imports","sourceMapOutput","contentsIgnoredCharsMap","contentsIgnoredChars","contentsMap","contents","sourceMapFilename","sourceMapURL","outputFilename","sourceMapOutputFilename","sourceMapBasepath","sourceMapRootpath","outputSourceFiles","sourceMapGenerator","sourceMapFileInline","css","sourceMap","sourceMapInputFilename","normalizeFilename","undefined","removeBasepath","getCSSAppendage","encodeBase64","getExternalSourceMap","setExternalSourceMap","isInline","getSourceMapURL","getOutputFilename","getInputFilename"],"mappings":";;;;;;;AAAAA,UAAW,WACP,aACA,IAAIC,KACAC,GAAWD,YAqEf,SAASE,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAvEAF,EAAOD,QAAU,SAAUQ,EAAiBC,GACxC,IAAIC,EAAmB,SAAUC,GAC7BC,KAAKD,QAAUA,GA0DnB,OAxDAD,EAAiBG,UAAUC,MAAQ,SAAUC,EAAUJ,EAASK,GAC5D,IAAIC,EAAkB,IAAIT,GACtBU,wBAAyBF,EAAQG,qBACjCJ,SAAUA,EACVK,YAAaJ,EAAQK,SACrBC,kBAAmBV,KAAKD,QAAQW,kBAChCC,aAAcX,KAAKD,QAAQY,aAC3BC,eAAgBZ,KAAKD,QAAQc,wBAC7BC,kBAAmBd,KAAKD,QAAQe,kBAChCC,kBAAmBf,KAAKD,QAAQgB,kBAChCC,kBAAmBhB,KAAKD,QAAQiB,kBAChCC,mBAAoBjB,KAAKD,QAAQkB,mBACjCC,oBAAqBlB,KAAKD,QAAQmB,sBAElCC,EAAMd,EAAgBH,MAAMH,GAShC,OARAC,KAAKoB,UAAYf,EAAgBe,UACjCpB,KAAKW,aAAeN,EAAgBM,aAChCX,KAAKD,QAAQsB,yBACbrB,KAAKqB,uBAAyBhB,EAAgBiB,kBAAkBtB,KAAKD,QAAQsB,8BAE1CE,IAAnCvB,KAAKD,QAAQe,wBAAyDS,IAAtBvB,KAAKW,eACrDX,KAAKW,aAAeN,EAAgBmB,eAAexB,KAAKW,eAErDQ,EAAMnB,KAAKyB,mBAEtB3B,EAAiBG,UAAUwB,gBAAkB,WACzC,IAAId,EAAeX,KAAKW,aACxB,GAAIX,KAAKD,QAAQmB,oBAAqB,CAClC,QAAuBK,IAAnBvB,KAAKoB,UACL,MAAO,GAEXT,EAAe,gCAAkCd,EAAY6B,aAAa1B,KAAKoB,WAEnF,OAAIT,EACO,wBAA0BA,EAAe,MAE7C,IAEXb,EAAiBG,UAAU0B,qBAAuB,WAC9C,OAAO3B,KAAKoB,WAEhBtB,EAAiBG,UAAU2B,qBAAuB,SAAUR,GACxDpB,KAAKoB,UAAYA,GAErBtB,EAAiBG,UAAU4B,SAAW,WAClC,OAAO7B,KAAKD,QAAQmB,qBAExBpB,EAAiBG,UAAU6B,gBAAkB,WACzC,OAAO9B,KAAKW,cAEhBb,EAAiBG,UAAU8B,kBAAoB,WAC3C,OAAO/B,KAAKD,QAAQc,yBAExBf,EAAiBG,UAAU+B,iBAAmB,WAC1C,OAAOhC,KAAKqB,wBAETvB,GAWPR,EAAkBD,EAAOD,SAClBC,EAAOD,QACTE,EAAkBF,GAChBA,OADN","file":"../../engine/source-map-builder.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    module.exports = function (SourceMapOutput, environment) {\n        var SourceMapBuilder = function (options) {\n            this.options = options;\n        };\n        SourceMapBuilder.prototype.toCSS = function (rootNode, options, imports) {\n            var sourceMapOutput = new SourceMapOutput({\n                contentsIgnoredCharsMap: imports.contentsIgnoredChars,\n                rootNode: rootNode,\n                contentsMap: imports.contents,\n                sourceMapFilename: this.options.sourceMapFilename,\n                sourceMapURL: this.options.sourceMapURL,\n                outputFilename: this.options.sourceMapOutputFilename,\n                sourceMapBasepath: this.options.sourceMapBasepath,\n                sourceMapRootpath: this.options.sourceMapRootpath,\n                outputSourceFiles: this.options.outputSourceFiles,\n                sourceMapGenerator: this.options.sourceMapGenerator,\n                sourceMapFileInline: this.options.sourceMapFileInline\n            });\n            var css = sourceMapOutput.toCSS(options);\n            this.sourceMap = sourceMapOutput.sourceMap;\n            this.sourceMapURL = sourceMapOutput.sourceMapURL;\n            if (this.options.sourceMapInputFilename) {\n                this.sourceMapInputFilename = sourceMapOutput.normalizeFilename(this.options.sourceMapInputFilename);\n            }\n            if (this.options.sourceMapBasepath !== undefined && this.sourceMapURL !== undefined) {\n                this.sourceMapURL = sourceMapOutput.removeBasepath(this.sourceMapURL);\n            }\n            return css + this.getCSSAppendage();\n        };\n        SourceMapBuilder.prototype.getCSSAppendage = function () {\n            var sourceMapURL = this.sourceMapURL;\n            if (this.options.sourceMapFileInline) {\n                if (this.sourceMap === undefined) {\n                    return '';\n                }\n                sourceMapURL = 'data:application/json;base64,' + environment.encodeBase64(this.sourceMap);\n            }\n            if (sourceMapURL) {\n                return '/*# sourceMappingURL=' + sourceMapURL + ' */';\n            }\n            return '';\n        };\n        SourceMapBuilder.prototype.getExternalSourceMap = function () {\n            return this.sourceMap;\n        };\n        SourceMapBuilder.prototype.setExternalSourceMap = function (sourceMap) {\n            this.sourceMap = sourceMap;\n        };\n        SourceMapBuilder.prototype.isInline = function () {\n            return this.options.sourceMapFileInline;\n        };\n        SourceMapBuilder.prototype.getSourceMapURL = function () {\n            return this.sourceMapURL;\n        };\n        SourceMapBuilder.prototype.getOutputFilename = function () {\n            return this.options.sourceMapOutputFilename;\n        };\n        SourceMapBuilder.prototype.getInputFilename = function () {\n            return this.sourceMapInputFilename;\n        };\n        return SourceMapBuilder;\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}