{"version":3,"sources":["engine/render.js"],"names":["define","__module__0","PromiseConstructor","exports","module","utils","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","environment","ParseTree","ImportManager","render","input","options","callback","copyOptions","this","Promise","self","resolve","reject","call","err","output","parse","root","imports","result","toCSS"],"mappings":";;;;;;;AAAAA,QAAQ,WAAY,SAAUC,GAC1B,aACA,IAEIC,EAFAC,KACAC,GAAWD,YACSE,EAAQJ,EA+ChC,SAASK,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAjDAH,EAAOD,QAAU,SAAUS,EAAaC,EAAWC,GAC/C,IAAIC,EAAS,SAAUC,EAAOC,EAASC,GAOnC,GANuB,mBAAZD,GACPC,EAAWD,EACXA,EAAUZ,EAAMc,YAAYC,KAAKH,aAEjCA,EAAUZ,EAAMc,YAAYC,KAAKH,QAASA,QAEzCC,EAAU,CACNhB,IACDA,EAAqBmB,SAEzB,IAAIC,EAAOF,KACX,OAAO,IAAIlB,EAAmB,SAAUqB,EAASC,GAC7CT,EAAOU,KAAKH,EAAMN,EAAOC,EAAS,SAAUS,EAAKC,GACzCD,EACAF,EAAOE,GAEPH,EAAQI,OAKpBP,KAAKQ,MAAMZ,EAAOC,EAAS,SAAUS,EAAKG,EAAMC,EAASb,GACrD,GAAIS,EACA,OAAOR,EAASQ,GAEpB,IAAIK,EACJ,IAEIA,EADgB,IAAIlB,EAAUgB,EAAMC,GACjBE,MAAMf,GAC3B,MAAOS,GACL,OAAOR,EAASQ,GAEpBR,EAAS,KAAMa,MAI3B,OAAOhB,GAWPT,EAAkBF,EAAOD,SAClBC,EAAOD,QACTG,EAAkBH,GAChBA,OADN","file":"../../engine/render.js","sourcesContent":["define(['./utils'], function (__module__0) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var PromiseConstructor, utils = __module__0;\n    module.exports = function (environment, ParseTree, ImportManager) {\n        var render = function (input, options, callback) {\n            if (typeof options === 'function') {\n                callback = options;\n                options = utils.copyOptions(this.options, {});\n            } else {\n                options = utils.copyOptions(this.options, options || {});\n            }\n            if (!callback) {\n                if (!PromiseConstructor) {\n                    PromiseConstructor = Promise;\n                }\n                var self = this;\n                return new PromiseConstructor(function (resolve, reject) {\n                    render.call(self, input, options, function (err, output) {\n                        if (err) {\n                            reject(err);\n                        } else {\n                            resolve(output);\n                        }\n                    });\n                });\n            } else {\n                this.parse(input, options, function (err, root, imports, options) {\n                    if (err) {\n                        return callback(err);\n                    }\n                    var result;\n                    try {\n                        var parseTree = new ParseTree(root, imports);\n                        result = parseTree.toCSS(options);\n                    } catch (err) {\n                        return callback(err);\n                    }\n                    callback(null, result);\n                });\n            }\n        };\n        return render;\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}