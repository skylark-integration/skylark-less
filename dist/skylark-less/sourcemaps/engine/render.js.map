{"version":3,"sources":["engine/render.js"],"names":["PromiseConstructor","utils","require","module","exports","environment","ParseTree","ImportManager","render","input","options","callback","copyOptions","this","Promise","self","resolve","reject","call","err","output","parse","root","imports","result","toCSS"],"mappings":";;;;;;;AAAA,IAAIA,mBAAoBC,MAAQC,QAAQ,WACxCC,OAAOC,QAAU,SAAUC,EAAaC,EAAWC,GAC/C,IAAIC,EAAS,SAAUC,EAAOC,EAASC,GAOnC,GANuB,mBAAZD,GACPC,EAAWD,EACXA,EAAUT,MAAMW,YAAYC,KAAKH,aAEjCA,EAAUT,MAAMW,YAAYC,KAAKH,QAASA,QAEzCC,EAAU,CACNX,qBACDA,mBAAwC,oBAAZc,QAA0BZ,QAAQ,WAAaY,SAE/E,IAAIC,EAAOF,KACX,OAAO,IAAIb,mBAAmB,SAAUgB,EAASC,GAC7CT,EAAOU,KAAKH,EAAMN,EAAOC,EAAS,SAAUS,EAAKC,GACzCD,EACAF,EAAOE,GAEPH,EAAQI,OAKpBP,KAAKQ,MAAMZ,EAAOC,EAAS,SAAUS,EAAKG,EAAMC,EAASb,GACrD,GAAIS,EACA,OAAOR,EAASQ,GAEpB,IAAIK,EACJ,IAEIA,EADgB,IAAIlB,EAAUgB,EAAMC,GACjBE,MAAMf,GAC3B,MAAOS,GACL,OAAOR,EAASQ,GAEpBR,EAAS,KAAMa,MAI3B,OAAOhB","file":"../../engine/render.js","sourcesContent":["var PromiseConstructor, utils = require('./utils');\nmodule.exports = function (environment, ParseTree, ImportManager) {\n    var render = function (input, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = utils.copyOptions(this.options, {});\n        } else {\n            options = utils.copyOptions(this.options, options || {});\n        }\n        if (!callback) {\n            if (!PromiseConstructor) {\n                PromiseConstructor = typeof Promise === 'undefined' ? require('promise') : Promise;\n            }\n            var self = this;\n            return new PromiseConstructor(function (resolve, reject) {\n                render.call(self, input, options, function (err, output) {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve(output);\n                    }\n                });\n            });\n        } else {\n            this.parse(input, options, function (err, root, imports, options) {\n                if (err) {\n                    return callback(err);\n                }\n                var result;\n                try {\n                    var parseTree = new ParseTree(root, imports);\n                    result = parseTree.toCSS(options);\n                } catch (err) {\n                    return callback(err);\n                }\n                callback(null, result);\n            });\n        }\n    };\n    return render;\n};"]}