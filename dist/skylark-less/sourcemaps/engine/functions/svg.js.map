{"version":3,"sources":["engine/functions/svg.js"],"names":["define","__module__0","__module__1","__module__2","__module__3","__module__4","__module__5","exports","module","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","environment","Dimension","Color","Expression","Quoted","URL","add","direction","stops","gradientDirectionSvg","returner","i","color","position","positionValue","alpha","gradientType","rectangleDimension","renderEnv","compress","directionValue","toCSS","throwArgumentDescriptor","type","message","arguments","length","value","prototype","slice","call","undefined","toRGB","encodeURIComponent","this","index","currentFileInfo"],"mappings":";;;;;;;AAAAA,QACI,oBACA,gBACA,qBACA,iBACA,cACA,uBACD,SAAUC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,GAC1E,aACA,IAAIC,KACAC,GAAWD,YA0Ef,SAASE,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OA5EAF,EAAOD,QAAU,SAAUQ,GACvB,IAAIC,EAAYf,EAAagB,EAAQf,EAAagB,EAAaf,EAAagB,EAASf,EAAagB,EAAMf,EAAgCC,EACvHe,IAAI,eAAgB,SAAUC,GAC3C,IAAIC,EAAOC,EAAyIC,EAAuDC,EAAGC,EAAOC,EAAUC,EAAeC,EAA7MC,EAAe,SAAUC,EAAqB,mCAAoCC,GAAcC,UAAU,GAAmBC,EAAiBb,EAAUc,MAAMH,GAC/L,SAASI,IACL,MACIC,KAAM,WACNC,QAAS,yIAajB,OAVwB,GAApBC,UAAUC,QACND,UAAU,GAAGE,MAAMD,OAAS,GAC5BJ,IAEJd,EAAQiB,UAAU,GAAGE,OACdF,UAAUC,OAAS,EAC1BJ,IAEAd,EAAQZ,MAAMgC,UAAUC,MAAMC,KAAKL,UAAW,GAE1CL,GACR,IAAK,YACDX,EAAuB,oCACvB,MACJ,IAAK,WACDA,EAAuB,oCACvB,MACJ,IAAK,kBACDA,EAAuB,sCACvB,MACJ,IAAK,eACDA,EAAuB,sCACvB,MACJ,IAAK,UACL,IAAK,oBACDO,EAAe,SACfP,EAAuB,4BACvBQ,EAAqB,2CACrB,MACJ,QACI,MACIM,KAAM,WACNC,QAAS,oHAIjB,IADAd,EAAW,8DAAqEM,EAAe,mBAAqBP,EAAuB,IACtIE,EAAI,EAAGA,EAAIH,EAAMkB,OAAQf,GAAK,EAC3BH,EAAMG,aAAcR,GACpBS,EAAQJ,EAAMG,GAAGgB,MAAM,GACvBd,EAAWL,EAAMG,GAAGgB,MAAM,KAE1Bf,EAAQJ,EAAMG,GACdE,OAAWkB,GAETnB,aAAiBV,KAAmB,IAANS,GAAWA,EAAI,IAAMH,EAAMkB,cAAwBK,IAAblB,GAA6BA,aAAoBZ,IACvHqB,IAEJR,EAAgBD,EAAWA,EAASQ,MAAMH,GAAmB,IAANP,EAAU,KAAO,OACxEI,EAAQH,EAAMG,MACdL,GAAY,iBAAmBI,EAAgB,iBAAmBF,EAAMoB,QAAU,KAAOjB,EAAQ,EAAI,kBAAoBA,EAAQ,IAAM,IAAM,KAKjJ,OAHAL,GAAY,KAAOM,EAAe,kBAAyBC,EAAqB,2BAChFP,EAAWuB,mBAAmBvB,GAEvB,IAAIL,EAAI,IAAID,EAAO,KAD1BM,EAAW,sBAAwBA,GACQ,IAAKA,GAAU,EAAOwB,KAAKC,MAAOD,KAAKE,iBAAkBF,KAAKC,MAAOD,KAAKE,oBAYzH1C,EAAkBD,EAAOD,SAClBC,EAAOD,QACTE,EAAkBF,GAChBA,OADN","file":"../../../engine/functions/svg.js","sourcesContent":["define([\n    '../tree/dimension',\n    '../tree/color',\n    '../tree/expression',\n    '../tree/quoted',\n    '../tree/url',\n    './function-registry'\n], function (__module__0, __module__1, __module__2, __module__3, __module__4, __module__5) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    module.exports = function (environment) {\n        var Dimension = __module__0, Color = __module__1, Expression = __module__2, Quoted = __module__3, URL = __module__4, functionRegistry = __module__5;\n        functionRegistry.add('svg-gradient', function (direction) {\n            var stops, gradientDirectionSvg, gradientType = 'linear', rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"', renderEnv = { compress: false }, returner, directionValue = direction.toCSS(renderEnv), i, color, position, positionValue, alpha;\n            function throwArgumentDescriptor() {\n                throw {\n                    type: 'Argument',\n                    message: 'svg-gradient expects direction, start_color [start_position], [color position,]...,' + ' end_color [end_position] or direction, color list'\n                };\n            }\n            if (arguments.length == 2) {\n                if (arguments[1].value.length < 2) {\n                    throwArgumentDescriptor();\n                }\n                stops = arguments[1].value;\n            } else if (arguments.length < 3) {\n                throwArgumentDescriptor();\n            } else {\n                stops = Array.prototype.slice.call(arguments, 1);\n            }\n            switch (directionValue) {\n            case 'to bottom':\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\n                break;\n            case 'to right':\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\n                break;\n            case 'to bottom right':\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\n                break;\n            case 'to top right':\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\n                break;\n            case 'ellipse':\n            case 'ellipse at center':\n                gradientType = 'radial';\n                gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\n                rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\n                break;\n            default:\n                throw {\n                    type: 'Argument',\n                    message: \"svg-gradient direction must be 'to bottom', 'to right',\" + \" 'to bottom right', 'to top right' or 'ellipse at center'\"\n                };\n            }\n            returner = '<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1 1\">' + '<' + gradientType + 'Gradient id=\"g\" ' + gradientDirectionSvg + '>';\n            for (i = 0; i < stops.length; i += 1) {\n                if (stops[i] instanceof Expression) {\n                    color = stops[i].value[0];\n                    position = stops[i].value[1];\n                } else {\n                    color = stops[i];\n                    position = undefined;\n                }\n                if (!(color instanceof Color) || !((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension)) {\n                    throwArgumentDescriptor();\n                }\n                positionValue = position ? position.toCSS(renderEnv) : i === 0 ? '0%' : '100%';\n                alpha = color.alpha;\n                returner += '<stop offset=\"' + positionValue + '\" stop-color=\"' + color.toRGB() + '\"' + (alpha < 1 ? ' stop-opacity=\"' + alpha + '\"' : '') + '/>';\n            }\n            returner += '</' + gradientType + 'Gradient>' + '<rect ' + rectangleDimension + ' fill=\"url(#g)\" /></svg>';\n            returner = encodeURIComponent(returner);\n            returner = 'data:image/svg+xml,' + returner;\n            return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n        });\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}