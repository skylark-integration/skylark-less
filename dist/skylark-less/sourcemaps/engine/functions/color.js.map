{"version":3,"sources":["engine/functions/color.js"],"names":["define","__module__0","__module__1","__module__2","__module__3","__module__4","colorFunctions","exports","module","Dimension","Color","Quoted","Anonymous","clamp","val","Math","min","max","hsla","origColor","hsl","color","h","s","l","a","value","test","number","n","parseFloat","unit","is","type","message","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","rgb","r","g","b","rgba","alpha","map","c","size","e","m1","m2","hue","hsv","v","hsva","i","f","vs","floor","perm","toHSL","saturation","lightness","hsvhue","toHSV","hsvsaturation","hsvvalue","red","green","blue","luma","luminance","saturate","amount","method","desaturate","lighten","darken","fadein","fadeout","fade","spin","mix","color1","color2","weight","console","log","dir","p","w","w1","w2","greyscale","contrast","dark","light","threshold","t","argb","toARGB","slice","undefined","fromKeyword","tint","shade","addMultiple"],"mappings":"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","file":"../../../engine/functions/color.js","sourcesContent":["define([\n    '../tree/dimension',\n    '../tree/color',\n    '../tree/quoted',\n    '../tree/anonymous',\n    './function-registry'\n], function (__module__0, __module__1, __module__2, __module__3, __module__4) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var Dimension = __module__0, Color = __module__1, Quoted = __module__2, Anonymous = __module__3, functionRegistry = __module__4, colorFunctions;\n    function clamp(val) {\n        return Math.min(1, Math.max(0, val));\n    }\n    function hsla(origColor, hsl) {\n        var color = colorFunctions.hsla(hsl.h, hsl.s, hsl.l, hsl.a);\n        if (color) {\n            if (origColor.value && /^(rgb|hsl)/.test(origColor.value)) {\n                color.value = origColor.value;\n            } else {\n                color.value = 'rgb';\n            }\n            return color;\n        }\n    }\n    function number(n) {\n        if (n instanceof Dimension) {\n            return parseFloat(n.unit.is('%') ? n.value / 100 : n.value);\n        } else if (typeof n === 'number') {\n            return n;\n        } else {\n            throw {\n                type: 'Argument',\n                message: 'color functions take numbers as parameters'\n            };\n        }\n    }\n    function scaled(n, size) {\n        if (n instanceof Dimension && n.unit.is('%')) {\n            return parseFloat(n.value * size / 100);\n        } else {\n            return number(n);\n        }\n    }\n    colorFunctions = {\n        rgb: function (r, g, b) {\n            var color = colorFunctions.rgba(r, g, b, 1);\n            if (color) {\n                color.value = 'rgb';\n                return color;\n            }\n        },\n        rgba: function (r, g, b, a) {\n            try {\n                if (r instanceof Color) {\n                    if (g) {\n                        a = number(g);\n                    } else {\n                        a = r.alpha;\n                    }\n                    return new Color(r.rgb, a, 'rgba');\n                }\n                var rgb = [\n                    r,\n                    g,\n                    b\n                ].map(function (c) {\n                    return scaled(c, 255);\n                });\n                a = number(a);\n                return new Color(rgb, a, 'rgba');\n            } catch (e) {\n            }\n        },\n        hsl: function (h, s, l) {\n            var color = colorFunctions.hsla(h, s, l, 1);\n            if (color) {\n                color.value = 'hsl';\n                return color;\n            }\n        },\n        hsla: function (h, s, l, a) {\n            try {\n                if (h instanceof Color) {\n                    if (s) {\n                        a = number(s);\n                    } else {\n                        a = h.alpha;\n                    }\n                    return new Color(h.rgb, a, 'hsla');\n                }\n                var m1, m2;\n                function hue(h) {\n                    h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;\n                    if (h * 6 < 1) {\n                        return m1 + (m2 - m1) * h * 6;\n                    } else if (h * 2 < 1) {\n                        return m2;\n                    } else if (h * 3 < 2) {\n                        return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n                    } else {\n                        return m1;\n                    }\n                }\n                h = number(h) % 360 / 360;\n                s = clamp(number(s));\n                l = clamp(number(l));\n                a = clamp(number(a));\n                m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n                m1 = l * 2 - m2;\n                var rgb = [\n                    hue(h + 1 / 3) * 255,\n                    hue(h) * 255,\n                    hue(h - 1 / 3) * 255\n                ];\n                a = number(a);\n                return new Color(rgb, a, 'hsla');\n            } catch (e) {\n            }\n        },\n        hsv: function (h, s, v) {\n            return colorFunctions.hsva(h, s, v, 1);\n        },\n        hsva: function (h, s, v, a) {\n            h = number(h) % 360 / 360 * 360;\n            s = number(s);\n            v = number(v);\n            a = number(a);\n            var i, f;\n            i = Math.floor(h / 60 % 6);\n            f = h / 60 - i;\n            var vs = [\n                v,\n                v * (1 - s),\n                v * (1 - f * s),\n                v * (1 - (1 - f) * s)\n            ];\n            var perm = [\n                [\n                    0,\n                    3,\n                    1\n                ],\n                [\n                    2,\n                    0,\n                    1\n                ],\n                [\n                    1,\n                    0,\n                    3\n                ],\n                [\n                    1,\n                    2,\n                    0\n                ],\n                [\n                    3,\n                    1,\n                    0\n                ],\n                [\n                    0,\n                    1,\n                    2\n                ]\n            ];\n            return colorFunctions.rgba(vs[perm[i][0]] * 255, vs[perm[i][1]] * 255, vs[perm[i][2]] * 255, a);\n        },\n        hue: function (color) {\n            return new Dimension(color.toHSL().h);\n        },\n        saturation: function (color) {\n            return new Dimension(color.toHSL().s * 100, '%');\n        },\n        lightness: function (color) {\n            return new Dimension(color.toHSL().l * 100, '%');\n        },\n        hsvhue: function (color) {\n            return new Dimension(color.toHSV().h);\n        },\n        hsvsaturation: function (color) {\n            return new Dimension(color.toHSV().s * 100, '%');\n        },\n        hsvvalue: function (color) {\n            return new Dimension(color.toHSV().v * 100, '%');\n        },\n        red: function (color) {\n            return new Dimension(color.rgb[0]);\n        },\n        green: function (color) {\n            return new Dimension(color.rgb[1]);\n        },\n        blue: function (color) {\n            return new Dimension(color.rgb[2]);\n        },\n        alpha: function (color) {\n            return new Dimension(color.toHSL().a);\n        },\n        luma: function (color) {\n            return new Dimension(color.luma() * color.alpha * 100, '%');\n        },\n        luminance: function (color) {\n            var luminance = 0.2126 * color.rgb[0] / 255 + 0.7152 * color.rgb[1] / 255 + 0.0722 * color.rgb[2] / 255;\n            return new Dimension(luminance * color.alpha * 100, '%');\n        },\n        saturate: function (color, amount, method) {\n            if (!color.rgb) {\n                return null;\n            }\n            var hsl = color.toHSL();\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.s += hsl.s * amount.value / 100;\n            } else {\n                hsl.s += amount.value / 100;\n            }\n            hsl.s = clamp(hsl.s);\n            return hsla(color, hsl);\n        },\n        desaturate: function (color, amount, method) {\n            var hsl = color.toHSL();\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.s -= hsl.s * amount.value / 100;\n            } else {\n                hsl.s -= amount.value / 100;\n            }\n            hsl.s = clamp(hsl.s);\n            return hsla(color, hsl);\n        },\n        lighten: function (color, amount, method) {\n            var hsl = color.toHSL();\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.l += hsl.l * amount.value / 100;\n            } else {\n                hsl.l += amount.value / 100;\n            }\n            hsl.l = clamp(hsl.l);\n            return hsla(color, hsl);\n        },\n        darken: function (color, amount, method) {\n            var hsl = color.toHSL();\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.l -= hsl.l * amount.value / 100;\n            } else {\n                hsl.l -= amount.value / 100;\n            }\n            hsl.l = clamp(hsl.l);\n            return hsla(color, hsl);\n        },\n        fadein: function (color, amount, method) {\n            var hsl = color.toHSL();\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.a += hsl.a * amount.value / 100;\n            } else {\n                hsl.a += amount.value / 100;\n            }\n            hsl.a = clamp(hsl.a);\n            return hsla(color, hsl);\n        },\n        fadeout: function (color, amount, method) {\n            var hsl = color.toHSL();\n            if (typeof method !== 'undefined' && method.value === 'relative') {\n                hsl.a -= hsl.a * amount.value / 100;\n            } else {\n                hsl.a -= amount.value / 100;\n            }\n            hsl.a = clamp(hsl.a);\n            return hsla(color, hsl);\n        },\n        fade: function (color, amount) {\n            var hsl = color.toHSL();\n            hsl.a = amount.value / 100;\n            hsl.a = clamp(hsl.a);\n            return hsla(color, hsl);\n        },\n        spin: function (color, amount) {\n            var hsl = color.toHSL();\n            var hue = (hsl.h + amount.value) % 360;\n            hsl.h = hue < 0 ? 360 + hue : hue;\n            return hsla(color, hsl);\n        },\n        mix: function (color1, color2, weight) {\n            if (!color1.toHSL || !color2.toHSL) {\n                console.log(color2.type);\n                console.dir(color2);\n            }\n            if (!weight) {\n                weight = new Dimension(50);\n            }\n            var p = weight.value / 100;\n            var w = p * 2 - 1;\n            var a = color1.toHSL().a - color2.toHSL().a;\n            var w1 = ((w * a == -1 ? w : (w + a) / (1 + w * a)) + 1) / 2;\n            var w2 = 1 - w1;\n            var rgb = [\n                color1.rgb[0] * w1 + color2.rgb[0] * w2,\n                color1.rgb[1] * w1 + color2.rgb[1] * w2,\n                color1.rgb[2] * w1 + color2.rgb[2] * w2\n            ];\n            var alpha = color1.alpha * p + color2.alpha * (1 - p);\n            return new Color(rgb, alpha);\n        },\n        greyscale: function (color) {\n            return colorFunctions.desaturate(color, new Dimension(100));\n        },\n        contrast: function (color, dark, light, threshold) {\n            if (!color.rgb) {\n                return null;\n            }\n            if (typeof light === 'undefined') {\n                light = colorFunctions.rgba(255, 255, 255, 1);\n            }\n            if (typeof dark === 'undefined') {\n                dark = colorFunctions.rgba(0, 0, 0, 1);\n            }\n            if (dark.luma() > light.luma()) {\n                var t = light;\n                light = dark;\n                dark = t;\n            }\n            if (typeof threshold === 'undefined') {\n                threshold = 0.43;\n            } else {\n                threshold = number(threshold);\n            }\n            if (color.luma() < threshold) {\n                return light;\n            } else {\n                return dark;\n            }\n        },\n        argb: function (color) {\n            return new Anonymous(color.toARGB());\n        },\n        color: function (c) {\n            if (c instanceof Quoted && /^#([A-Fa-f0-9]{8}|[A-Fa-f0-9]{6}|[A-Fa-f0-9]{3,4})$/i.test(c.value)) {\n                var val = c.value.slice(1);\n                return new Color(val, undefined, '#' + val);\n            }\n            if (c instanceof Color || (c = Color.fromKeyword(c.value))) {\n                c.value = undefined;\n                return c;\n            }\n            throw {\n                type: 'Argument',\n                message: 'argument must be a color keyword or 3|4|6|8 digit hex e.g. #FFF'\n            };\n        },\n        tint: function (color, amount) {\n            return colorFunctions.mix(colorFunctions.rgb(255, 255, 255), color, amount);\n        },\n        shade: function (color, amount) {\n            return colorFunctions.mix(colorFunctions.rgb(0, 0, 0), color, amount);\n        }\n    };\n    functionRegistry.addMultiple(colorFunctions);\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}