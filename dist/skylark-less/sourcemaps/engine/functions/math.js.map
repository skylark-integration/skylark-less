{"version":3,"sources":["engine/functions/math.js"],"names":["define","__module__0","__module__1","exports","module","functionRegistry","mathHelper","mathFunctions","ceil","floor","sqrt","abs","tan","sin","cos","atan","asin","acos","f","hasOwnProperty","_math","bind","Math","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","round","n","fraction","value","num","toFixed","addMultiple"],"mappings":";;;;;;;AAAAA,QACI,sBACA,iBACD,SAAUC,EAAaC,GACtB,aACA,IAAIC,KACAC,KACAC,EAAmBJ,EAAaK,EAAaJ,EAC7CK,GACAC,KAAM,KACNC,MAAO,KACPC,KAAM,KACNC,IAAK,KACLC,IAAK,GACLC,IAAK,GACLC,IAAK,GACLC,KAAM,MACNC,KAAM,MACNC,KAAM,OAEV,IAAK,IAAIC,KAAKX,EACNA,EAAcY,eAAeD,KAC7BX,EAAcW,GAAKZ,EAAWc,MAAMC,KAAK,KAAMC,KAAKJ,GAAIX,EAAcW,KAgB9E,SAASK,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAhBAjB,EAAcsB,MAAQ,SAAUC,EAAGZ,GAC/B,IAAIa,OAAwB,IAANb,EAAoB,EAAIA,EAAEc,MAChD,OAAO1B,EAAWc,MAAM,SAAUa,GAC9B,OAAOA,EAAIC,QAAQH,IACpB,KAAMD,IAEbzB,EAAiB8B,YAAY5B,GAUzBgB,EAAkBnB,GACXA,EACFmB,EAAkBpB,GAChBA,OADN","file":"../../../engine/functions/math.js","sourcesContent":["define([\n    './function-registry',\n    './math-helper'\n], function (__module__0, __module__1) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var functionRegistry = __module__0, mathHelper = __module__1;\n    var mathFunctions = {\n        ceil: null,\n        floor: null,\n        sqrt: null,\n        abs: null,\n        tan: '',\n        sin: '',\n        cos: '',\n        atan: 'rad',\n        asin: 'rad',\n        acos: 'rad'\n    };\n    for (var f in mathFunctions) {\n        if (mathFunctions.hasOwnProperty(f)) {\n            mathFunctions[f] = mathHelper._math.bind(null, Math[f], mathFunctions[f]);\n        }\n    }\n    mathFunctions.round = function (n, f) {\n        var fraction = typeof f === 'undefined' ? 0 : f.value;\n        return mathHelper._math(function (num) {\n            return num.toFixed(fraction);\n        }, null, n);\n    };\n    functionRegistry.addMultiple(mathFunctions);\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}