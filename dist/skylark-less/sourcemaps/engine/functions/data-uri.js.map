{"version":3,"sources":["engine/functions/data-uri.js"],"names":["define","__module__0","__module__1","__module__2","__module__3","__module__4","exports","module","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","environment","Quoted","URL","utils","fallback","functionThis","node","index","currentFileInfo","eval","context","logger","add","mimetypeNode","filePathNode","mimetype","value","filePath","this","currentDirectory","rewriteUrls","entryPath","fragmentStart","indexOf","fragment","slice","clone","rawBuffer","fileManager","getFileManager","useBase64","test","mimeLookup","charset","charsetLookup","fileSync","loadFileSync","contents","warn","buf","encodeBase64","uri","encodeURIComponent","length","ieCompat"],"mappings":";;;;;;;AAAAA,QACI,iBACA,cACA,WACA,sBACA,aACD,SAAUC,EAAaC,EAAaC,EAAaC,EAAaC,GAC7D,aACA,IAAIC,KACAC,GAAWD,YAuEf,SAASE,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAzEAF,EAAOD,QAAU,SAAUQ,GACvB,IAAIC,EAASd,EAAae,EAAMd,EAAae,EAAQd,EAA6Ce,EAAW,SAAUC,EAAcC,GAC7H,OAAO,IAAIJ,EAAII,EAAMD,EAAaE,MAAOF,EAAaG,iBAAiBC,KAAKJ,EAAaK,UAC1FC,EAASpB,EAFqED,EAGpEsB,IAAI,WAAY,SAAUC,EAAcC,GAChDA,IACDA,EAAeD,EACfA,EAAe,MAEnB,IAAIE,EAAWF,GAAgBA,EAAaG,MACxCC,EAAWH,EAAaE,MACxBR,EAAkBU,KAAKV,gBACvBW,EAAmBX,EAAgBY,YAAcZ,EAAgBW,iBAAmBX,EAAgBa,UACpGC,EAAgBL,EAASM,QAAQ,KACjCC,EAAW,IACQ,IAAnBF,IACAE,EAAWP,EAASQ,MAAMH,GAC1BL,EAAWA,EAASQ,MAAM,EAAGH,IAEjC,IAAIZ,EAAUP,EAAMuB,MAAMR,KAAKR,SAC/BA,EAAQiB,WAAY,EACpB,IAAIC,EAAc5B,EAAY6B,eAAeZ,EAAUE,EAAkBT,EAASV,GAAa,GAC/F,IAAK4B,EACD,OAAOxB,EAASc,KAAMJ,GAE1B,IAAIgB,GAAY,EAChB,GAAKjB,EAeDiB,EAAY,WAAWC,KAAKhB,OAfb,CAEf,GAAiB,mBADjBA,EAAWf,EAAYgC,WAAWf,IAE9Ba,GAAY,MACT,CACH,IAAIG,EAAUjC,EAAYkC,cAAcnB,GACxCe,GACI,WACA,SACFP,QAAQU,GAAW,EAErBH,IACAf,GAAY,WAKpB,IAAIoB,EAAWP,EAAYQ,aAAanB,EAAUE,EAAkBT,EAASV,GAC7E,IAAKmC,EAASE,SAEV,OADA1B,EAAO2B,KAAK,iCAAmCrB,EAAW,2BACnDb,EAASc,KAAMJ,GAAgBD,GAE1C,IAAI0B,EAAMJ,EAASE,SACnB,GAAIP,IAAc9B,EAAYwC,aAC1B,OAAOpC,EAASc,KAAMJ,GAG1B,IAAI2B,EAAM,QAAU1B,EAAW,KAD/BwB,EAAMT,EAAY9B,EAAYwC,aAAaD,GAAOG,mBAAmBH,IAC1Bf,EAE3C,OAAIiB,EAAIE,QADW,QAEe,IAA1BzB,KAAKR,QAAQkC,UACbjC,EAAO2B,KAAK,iCAAmCrB,EAAW,sBAAwBwB,EAAIE,OAAS,mDACxFvC,EAASc,KAAMJ,GAAgBD,IAGvC,IAAIX,EAAI,IAAID,EAAO,IAAMwC,EAAM,IAAKA,GAAK,EAAOvB,KAAKX,MAAOW,KAAKV,iBAAkBU,KAAKX,MAAOW,KAAKV,oBAY/Gd,EAAkBD,EAAOD,SAClBC,EAAOD,QACTE,EAAkBF,GAChBA,OADN","file":"../../../engine/functions/data-uri.js","sourcesContent":["define([\n    '../tree/quoted',\n    '../tree/url',\n    '../utils',\n    './function-registry',\n    '../logger'\n], function (__module__0, __module__1, __module__2, __module__3, __module__4) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    module.exports = function (environment) {\n        var Quoted = __module__0, URL = __module__1, utils = __module__2, functionRegistry = __module__3, fallback = function (functionThis, node) {\n                return new URL(node, functionThis.index, functionThis.currentFileInfo).eval(functionThis.context);\n            }, logger = __module__4;\n        functionRegistry.add('data-uri', function (mimetypeNode, filePathNode) {\n            if (!filePathNode) {\n                filePathNode = mimetypeNode;\n                mimetypeNode = null;\n            }\n            var mimetype = mimetypeNode && mimetypeNode.value;\n            var filePath = filePathNode.value;\n            var currentFileInfo = this.currentFileInfo;\n            var currentDirectory = currentFileInfo.rewriteUrls ? currentFileInfo.currentDirectory : currentFileInfo.entryPath;\n            var fragmentStart = filePath.indexOf('#');\n            var fragment = '';\n            if (fragmentStart !== -1) {\n                fragment = filePath.slice(fragmentStart);\n                filePath = filePath.slice(0, fragmentStart);\n            }\n            var context = utils.clone(this.context);\n            context.rawBuffer = true;\n            var fileManager = environment.getFileManager(filePath, currentDirectory, context, environment, true);\n            if (!fileManager) {\n                return fallback(this, filePathNode);\n            }\n            var useBase64 = false;\n            if (!mimetypeNode) {\n                mimetype = environment.mimeLookup(filePath);\n                if (mimetype === 'image/svg+xml') {\n                    useBase64 = false;\n                } else {\n                    var charset = environment.charsetLookup(mimetype);\n                    useBase64 = [\n                        'US-ASCII',\n                        'UTF-8'\n                    ].indexOf(charset) < 0;\n                }\n                if (useBase64) {\n                    mimetype += ';base64';\n                }\n            } else {\n                useBase64 = /;base64$/.test(mimetype);\n            }\n            var fileSync = fileManager.loadFileSync(filePath, currentDirectory, context, environment);\n            if (!fileSync.contents) {\n                logger.warn('Skipped data-uri embedding of ' + filePath + ' because file not found');\n                return fallback(this, filePathNode || mimetypeNode);\n            }\n            var buf = fileSync.contents;\n            if (useBase64 && !environment.encodeBase64) {\n                return fallback(this, filePathNode);\n            }\n            buf = useBase64 ? environment.encodeBase64(buf) : encodeURIComponent(buf);\n            var uri = 'data:' + mimetype + ',' + buf + fragment;\n            var DATA_URI_MAX = 32768;\n            if (uri.length >= DATA_URI_MAX) {\n                if (this.context.ieCompat !== false) {\n                    logger.warn('Skipped data-uri embedding of ' + filePath + ' because its size (' + uri.length + ' characters) exceeds IE8-safe ' + DATA_URI_MAX + ' characters!');\n                    return fallback(this, filePathNode || mimetypeNode);\n                }\n            }\n            return new URL(new Quoted('\"' + uri + '\"', uri, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n        });\n    };\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}