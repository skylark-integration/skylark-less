{"version":3,"sources":["engine/functions/types.js"],"names":["define","__module__0","__module__1","__module__2","__module__3","__module__4","__module__5","__module__6","__module__7","__module__8","exports","module","Keyword","DetachedRuleset","Dimension","Color","Quoted","Anonymous","URL","Operation","isa","n","Type","True","False","isunit","unit","undefined","type","message","value","is","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","addMultiple","isruleset","iscolor","isnumber","isstring","iskeyword","isurl","ispixel","ispercentage","isem","val","toCSS","get-unit"],"mappings":";;;;;;;AAAAA,QACI,kBACA,2BACA,oBACA,gBACA,iBACA,oBACA,cACA,oBACA,uBACD,SAAUC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,GACjH,aACA,IAAIC,KACAC,KACAC,EAAUX,EAAaY,EAAkBX,EAAaY,EAAYX,EAAaY,EAAQX,EAAaY,EAASX,EAAaY,EAAYX,EAAaY,EAAMX,EAAaY,EAAYX,EAClLY,EAAM,SAAUC,EAAGC,GACf,OAAOD,aAAaC,EAAOV,EAAQW,KAAOX,EAAQY,OACnDC,EAAS,SAAUJ,EAAGK,GACrB,QAAaC,IAATD,EACA,MACIE,KAAM,WACNC,QAAS,mDAIjB,GAAoB,iBADpBH,EAA6B,iBAAfA,EAAKI,MAAqBJ,EAAKI,MAAQJ,GAEjD,MACIE,KAAM,WACNC,QAAS,2DAGjB,OAAOR,aAAaP,GAAaO,EAAEK,KAAKK,GAAGL,GAAQd,EAAQW,KAAOX,EAAQY,OA2DlF,SAASQ,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OA/EsNxB,EAmBrM6B,aACbC,UAAW,SAAUlB,GACjB,OAAOD,EAAIC,EAAGR,IAElB2B,QAAS,SAAUnB,GACf,OAAOD,EAAIC,EAAGN,IAElB0B,SAAU,SAAUpB,GAChB,OAAOD,EAAIC,EAAGP,IAElB4B,SAAU,SAAUrB,GAChB,OAAOD,EAAIC,EAAGL,IAElB2B,UAAW,SAAUtB,GACjB,OAAOD,EAAIC,EAAGT,IAElBgC,MAAO,SAAUvB,GACb,OAAOD,EAAIC,EAAGH,IAElB2B,QAAS,SAAUxB,GACf,OAAOI,EAAOJ,EAAG,OAErByB,aAAc,SAAUzB,GACpB,OAAOI,EAAOJ,EAAG,MAErB0B,KAAM,SAAU1B,GACZ,OAAOI,EAAOJ,EAAG,OAErBI,OAAQA,EACRC,KAAM,SAAUsB,EAAKtB,GACjB,KAAMsB,aAAelC,GACjB,MACIc,KAAM,WACNC,QAAS,+CAAiDmB,aAAe7B,EAAY,oCAAsC,KAYnI,OAPQO,EAFJA,EACIA,aAAgBd,EACTc,EAAKI,MAELJ,EAAKuB,QAGT,GAEJ,IAAInC,EAAUkC,EAAIlB,MAAOJ,IAEpCwB,WAAY,SAAU7B,GAClB,OAAO,IAAIJ,EAAUI,EAAEK,SAY3BM,EAAkBrB,GACXA,EACFqB,EAAkBtB,GAChBA,OADN","file":"../../../engine/functions/types.js","sourcesContent":["define([\n    '../tree/keyword',\n    '../tree/detached-ruleset',\n    '../tree/dimension',\n    '../tree/color',\n    '../tree/quoted',\n    '../tree/anonymous',\n    '../tree/url',\n    '../tree/operation',\n    './function-registry'\n], function (__module__0, __module__1, __module__2, __module__3, __module__4, __module__5, __module__6, __module__7, __module__8) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var Keyword = __module__0, DetachedRuleset = __module__1, Dimension = __module__2, Color = __module__3, Quoted = __module__4, Anonymous = __module__5, URL = __module__6, Operation = __module__7, functionRegistry = __module__8;\n    var isa = function (n, Type) {\n            return n instanceof Type ? Keyword.True : Keyword.False;\n        }, isunit = function (n, unit) {\n            if (unit === undefined) {\n                throw {\n                    type: 'Argument',\n                    message: 'missing the required second argument to isunit.'\n                };\n            }\n            unit = typeof unit.value === 'string' ? unit.value : unit;\n            if (typeof unit !== 'string') {\n                throw {\n                    type: 'Argument',\n                    message: 'Second argument to isunit should be a unit or a string.'\n                };\n            }\n            return n instanceof Dimension && n.unit.is(unit) ? Keyword.True : Keyword.False;\n        };\n    functionRegistry.addMultiple({\n        isruleset: function (n) {\n            return isa(n, DetachedRuleset);\n        },\n        iscolor: function (n) {\n            return isa(n, Color);\n        },\n        isnumber: function (n) {\n            return isa(n, Dimension);\n        },\n        isstring: function (n) {\n            return isa(n, Quoted);\n        },\n        iskeyword: function (n) {\n            return isa(n, Keyword);\n        },\n        isurl: function (n) {\n            return isa(n, URL);\n        },\n        ispixel: function (n) {\n            return isunit(n, 'px');\n        },\n        ispercentage: function (n) {\n            return isunit(n, '%');\n        },\n        isem: function (n) {\n            return isunit(n, 'em');\n        },\n        isunit: isunit,\n        unit: function (val, unit) {\n            if (!(val instanceof Dimension)) {\n                throw {\n                    type: 'Argument',\n                    message: 'the first argument to unit must be a number' + (val instanceof Operation ? '. Have you forgotten parenthesis?' : '')\n                };\n            }\n            if (unit) {\n                if (unit instanceof Keyword) {\n                    unit = unit.value;\n                } else {\n                    unit = unit.toCSS();\n                }\n            } else {\n                unit = '';\n            }\n            return new Dimension(val.value, unit);\n        },\n        'get-unit': function (n) {\n            return new Anonymous(n.unit);\n        }\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}