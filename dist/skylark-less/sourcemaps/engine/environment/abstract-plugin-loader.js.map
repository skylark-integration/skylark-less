{"version":3,"sources":["engine/environment/abstract-plugin-loader.js"],"names":["functionRegistry","require","LessError","AbstractPluginLoader","this","prototype","evalPlugin","contents","context","imports","pluginOptions","fileInfo","registry","pluginObj","localModule","pluginManager","filename","result","shortname","less","FileManager","extractUrlParts","get","trySetOptions","use","call","e","message","exports","create","Function","loader","obj","tree","validatePlugin","minVersion","compareVersion","addPlugin","functions","getLocalFunctions","plugin","name","options","setOptions","version","versionToString","aVersion","bVersion","match","shift","i","length","parseInt","versionString","printUsage","plugins","module"],"mappings":"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","file":"../../../engine/environment/abstract-plugin-loader.js","sourcesContent":["var functionRegistry = require('../functions/function-registry'), LessError = require('../less-error');\nvar AbstractPluginLoader = function () {\n    this.require = function () {\n        return null;\n    };\n};\nAbstractPluginLoader.prototype.evalPlugin = function (contents, context, imports, pluginOptions, fileInfo) {\n    var loader, registry, pluginObj, localModule, pluginManager, filename, result;\n    pluginManager = context.pluginManager;\n    if (fileInfo) {\n        if (typeof fileInfo === 'string') {\n            filename = fileInfo;\n        } else {\n            filename = fileInfo.filename;\n        }\n    }\n    var shortname = new this.less.FileManager().extractUrlParts(filename).filename;\n    if (filename) {\n        pluginObj = pluginManager.get(filename);\n        if (pluginObj) {\n            result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n            if (result) {\n                return result;\n            }\n            try {\n                if (pluginObj.use) {\n                    pluginObj.use.call(this.context, pluginObj);\n                }\n            } catch (e) {\n                e.message = e.message || 'Error during @plugin call';\n                return new LessError(e, imports, filename);\n            }\n            return pluginObj;\n        }\n    }\n    localModule = {\n        exports: {},\n        pluginManager: pluginManager,\n        fileInfo: fileInfo\n    };\n    registry = functionRegistry.create();\n    var registerPlugin = function (obj) {\n        pluginObj = obj;\n    };\n    try {\n        loader = new Function('module', 'require', 'registerPlugin', 'functions', 'tree', 'less', 'fileInfo', contents);\n        loader(localModule, this.require(filename), registerPlugin, registry, this.less.tree, this.less, fileInfo);\n    } catch (e) {\n        return new LessError(e, imports, filename);\n    }\n    if (!pluginObj) {\n        pluginObj = localModule.exports;\n    }\n    pluginObj = this.validatePlugin(pluginObj, filename, shortname);\n    if (pluginObj instanceof LessError) {\n        return pluginObj;\n    }\n    if (pluginObj) {\n        pluginObj.imports = imports;\n        pluginObj.filename = filename;\n        if (!pluginObj.minVersion || this.compareVersion('3.0.0', pluginObj.minVersion) < 0) {\n            result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n            if (result) {\n                return result;\n            }\n        }\n        pluginManager.addPlugin(pluginObj, fileInfo.filename, registry);\n        pluginObj.functions = registry.getLocalFunctions();\n        result = this.trySetOptions(pluginObj, filename, shortname, pluginOptions);\n        if (result) {\n            return result;\n        }\n        try {\n            if (pluginObj.use) {\n                pluginObj.use.call(this.context, pluginObj);\n            }\n        } catch (e) {\n            e.message = e.message || 'Error during @plugin call';\n            return new LessError(e, imports, filename);\n        }\n    } else {\n        return new LessError({ message: 'Not a valid plugin' }, imports, filename);\n    }\n    return pluginObj;\n};\nAbstractPluginLoader.prototype.trySetOptions = function (plugin, filename, name, options) {\n    if (options && !plugin.setOptions) {\n        return new LessError({ message: 'Options have been provided but the plugin ' + name + ' does not support any options.' });\n    }\n    try {\n        plugin.setOptions && plugin.setOptions(options);\n    } catch (e) {\n        return new LessError(e);\n    }\n};\nAbstractPluginLoader.prototype.validatePlugin = function (plugin, filename, name) {\n    if (plugin) {\n        if (typeof plugin === 'function') {\n            plugin = new plugin();\n        }\n        if (plugin.minVersion) {\n            if (this.compareVersion(plugin.minVersion, this.less.version) < 0) {\n                return new LessError({ message: 'Plugin ' + name + ' requires version ' + this.versionToString(plugin.minVersion) });\n            }\n        }\n        return plugin;\n    }\n    return null;\n};\nAbstractPluginLoader.prototype.compareVersion = function (aVersion, bVersion) {\n    if (typeof aVersion === 'string') {\n        aVersion = aVersion.match(/^(\\d+)\\.?(\\d+)?\\.?(\\d+)?/);\n        aVersion.shift();\n    }\n    for (var i = 0; i < aVersion.length; i++) {\n        if (aVersion[i] !== bVersion[i]) {\n            return parseInt(aVersion[i]) > parseInt(bVersion[i]) ? -1 : 1;\n        }\n    }\n    return 0;\n};\nAbstractPluginLoader.prototype.versionToString = function (version) {\n    var versionString = '';\n    for (var i = 0; i < version.length; i++) {\n        versionString += (versionString ? '.' : '') + version[i];\n    }\n    return versionString;\n};\nAbstractPluginLoader.prototype.printUsage = function (plugins) {\n    for (var i = 0; i < plugins.length; i++) {\n        var plugin = plugins[i];\n        if (plugin.printUsage) {\n            plugin.printUsage();\n        }\n    }\n};\nmodule.exports = AbstractPluginLoader;"]}