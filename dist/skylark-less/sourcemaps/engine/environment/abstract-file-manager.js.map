{"version":3,"sources":["engine/environment/abstract-file-manager.js"],"names":["abstractFileManager","prototype","getPath","filename","j","lastIndexOf","slice","tryAppendExtension","path","ext","test","tryAppendLessExtension","this","supportsSync","alwaysMakePathsAbsolute","isPathAbsolute","join","basePath","laterPath","pathDiff","url","baseUrl","i","max","urlDirectories","baseUrlDirectories","urlParts","extractUrlParts","baseUrlParts","diff","hostPart","Math","directories","length","urlPartsRegex","match","returner","rawDirectories","Error","replace","split","pop","push","rawPath","fileUrl","module","exports"],"mappings":";;;;;;;AAAA,IAAIA,oBAAsB,aAE1BA,oBAAoBC,UAAUC,QAAU,SAAUC,GAC9C,IAAIC,EAAID,EAASE,YAAY,KAQ7B,OAPID,EAAI,IACJD,EAAWA,EAASG,MAAM,EAAGF,KAEjCA,EAAID,EAASE,YAAY,MACjB,IACJD,EAAID,EAASE,YAAY,OAEzBD,EAAI,EACG,GAEJD,EAASG,MAAM,EAAGF,EAAI,IAEjCJ,oBAAoBC,UAAUM,mBAAqB,SAAUC,EAAMC,GAC/D,MAAO,yBAAyBC,KAAKF,GAAQA,EAAOA,EAAOC,GAE/DT,oBAAoBC,UAAUU,uBAAyB,SAAUH,GAC7D,OAAOI,KAAKL,mBAAmBC,EAAM,UAEzCR,oBAAoBC,UAAUY,aAAe,WACzC,OAAO,GAEXb,oBAAoBC,UAAUa,wBAA0B,WACpD,OAAO,GAEXd,oBAAoBC,UAAUc,eAAiB,SAAUZ,GACrD,MAAO,yBAAyBO,KAAKP,IAEzCH,oBAAoBC,UAAUe,KAAO,SAAUC,EAAUC,GACrD,OAAKD,EAGEA,EAAWC,EAFPA,GAIflB,oBAAoBC,UAAUkB,SAAW,SAAkBC,EAAKC,GAC5D,IAAwFC,EAAGC,EAAKC,EAAgBC,EAA5GC,EAAWd,KAAKe,gBAAgBP,GAAMQ,EAAehB,KAAKe,gBAAgBN,GAAsDQ,EAAO,GAC3I,GAAIH,EAASI,WAAaF,EAAaE,SACnC,MAAO,GAGX,IADAP,EAAMQ,KAAKR,IAAIK,EAAaI,YAAYC,OAAQP,EAASM,YAAYC,QAChEX,EAAI,EAAGA,EAAIC,GACRK,EAAaI,YAAYV,KAAOI,EAASM,YAAYV,GADxCA,KAOrB,IAFAG,EAAqBG,EAAaI,YAAY1B,MAAMgB,GACpDE,EAAiBE,EAASM,YAAY1B,MAAMgB,GACvCA,EAAI,EAAGA,EAAIG,EAAmBQ,OAAS,EAAGX,IAC3CO,GAAQ,MAEZ,IAAKP,EAAI,EAAGA,EAAIE,EAAeS,OAAS,EAAGX,IACvCO,GAAQL,EAAeF,GAAK,IAEhC,OAAOO,GAEX7B,oBAAoBC,UAAU0B,gBAAkB,SAAyBP,EAAKC,GAC1E,IAAkNC,EAAGM,EAAjNM,EAAgB,kGAAmGR,EAAWN,EAAIe,MAAMD,GAAgBE,KAAeC,KAAqBL,KAChM,IAAKN,EACD,MAAM,IAAIY,MAAM,iCAAmClB,EAAM,KAE7D,GAAIC,KAAaK,EAAS,IAAMA,EAAS,IAAK,CAE1C,KADAE,EAAeP,EAAQc,MAAMD,IAEzB,MAAM,IAAII,MAAM,+BAAiCjB,EAAU,KAE/DK,EAAS,GAAKA,EAAS,IAAME,EAAa,IAAM,GAC3CF,EAAS,KACVA,EAAS,GAAKE,EAAa,GAAKF,EAAS,IAGjD,GAAIA,EAAS,GAET,IADAW,EAAiBX,EAAS,GAAGa,QAAQ,MAAO,KAAKC,MAAM,KAClDlB,EAAI,EAAGA,EAAIe,EAAeJ,OAAQX,IACT,OAAtBe,EAAef,GACfU,EAAYS,MACiB,MAAtBJ,EAAef,IACtBU,EAAYU,KAAKL,EAAef,IAW5C,OAPAc,EAASN,SAAWJ,EAAS,GAC7BU,EAASJ,YAAcA,EACvBI,EAASO,SAAWjB,EAAS,IAAM,IAAMW,EAAerB,KAAK,KAC7DoB,EAAS5B,MAAQkB,EAAS,IAAM,IAAMM,EAAYhB,KAAK,KACvDoB,EAASjC,SAAWuB,EAAS,GAC7BU,EAASQ,QAAUR,EAAS5B,MAAQkB,EAAS,IAAM,IACnDU,EAAShB,IAAMgB,EAASQ,SAAWlB,EAAS,IAAM,IAC3CU,GAEXS,OAAOC,QAAU9C","file":"../../../engine/environment/abstract-file-manager.js","sourcesContent":["var abstractFileManager = function () {\n};\nabstractFileManager.prototype.getPath = function (filename) {\n    var j = filename.lastIndexOf('?');\n    if (j > 0) {\n        filename = filename.slice(0, j);\n    }\n    j = filename.lastIndexOf('/');\n    if (j < 0) {\n        j = filename.lastIndexOf('\\\\');\n    }\n    if (j < 0) {\n        return '';\n    }\n    return filename.slice(0, j + 1);\n};\nabstractFileManager.prototype.tryAppendExtension = function (path, ext) {\n    return /(\\.[a-z]*$)|([\\?;].*)$/.test(path) ? path : path + ext;\n};\nabstractFileManager.prototype.tryAppendLessExtension = function (path) {\n    return this.tryAppendExtension(path, '.less');\n};\nabstractFileManager.prototype.supportsSync = function () {\n    return false;\n};\nabstractFileManager.prototype.alwaysMakePathsAbsolute = function () {\n    return false;\n};\nabstractFileManager.prototype.isPathAbsolute = function (filename) {\n    return /^(?:[a-z-]+:|\\/|\\\\|#)/i.test(filename);\n};\nabstractFileManager.prototype.join = function (basePath, laterPath) {\n    if (!basePath) {\n        return laterPath;\n    }\n    return basePath + laterPath;\n};\nabstractFileManager.prototype.pathDiff = function pathDiff(url, baseUrl) {\n    var urlParts = this.extractUrlParts(url), baseUrlParts = this.extractUrlParts(baseUrl), i, max, urlDirectories, baseUrlDirectories, diff = '';\n    if (urlParts.hostPart !== baseUrlParts.hostPart) {\n        return '';\n    }\n    max = Math.max(baseUrlParts.directories.length, urlParts.directories.length);\n    for (i = 0; i < max; i++) {\n        if (baseUrlParts.directories[i] !== urlParts.directories[i]) {\n            break;\n        }\n    }\n    baseUrlDirectories = baseUrlParts.directories.slice(i);\n    urlDirectories = urlParts.directories.slice(i);\n    for (i = 0; i < baseUrlDirectories.length - 1; i++) {\n        diff += '../';\n    }\n    for (i = 0; i < urlDirectories.length - 1; i++) {\n        diff += urlDirectories[i] + '/';\n    }\n    return diff;\n};\nabstractFileManager.prototype.extractUrlParts = function extractUrlParts(url, baseUrl) {\n    var urlPartsRegex = /^((?:[a-z-]+:)?\\/{2}(?:[^\\/\\?#]*\\/)|([\\/\\\\]))?((?:[^\\/\\\\\\?#]*[\\/\\\\])*)([^\\/\\\\\\?#]*)([#\\?].*)?$/i, urlParts = url.match(urlPartsRegex), returner = {}, rawDirectories = [], directories = [], i, baseUrlParts;\n    if (!urlParts) {\n        throw new Error(\"Could not parse sheet href - '\" + url + \"'\");\n    }\n    if (baseUrl && (!urlParts[1] || urlParts[2])) {\n        baseUrlParts = baseUrl.match(urlPartsRegex);\n        if (!baseUrlParts) {\n            throw new Error(\"Could not parse page url - '\" + baseUrl + \"'\");\n        }\n        urlParts[1] = urlParts[1] || baseUrlParts[1] || '';\n        if (!urlParts[2]) {\n            urlParts[3] = baseUrlParts[3] + urlParts[3];\n        }\n    }\n    if (urlParts[3]) {\n        rawDirectories = urlParts[3].replace(/\\\\/g, '/').split('/');\n        for (i = 0; i < rawDirectories.length; i++) {\n            if (rawDirectories[i] === '..') {\n                directories.pop();\n            } else if (rawDirectories[i] !== '.') {\n                directories.push(rawDirectories[i]);\n            }\n        }\n    }\n    returner.hostPart = urlParts[1];\n    returner.directories = directories;\n    returner.rawPath = (urlParts[1] || '') + rawDirectories.join('/');\n    returner.path = (urlParts[1] || '') + directories.join('/');\n    returner.filename = urlParts[4];\n    returner.fileUrl = returner.path + (urlParts[4] || '');\n    returner.url = returner.fileUrl + (urlParts[5] || '');\n    return returner;\n};\nmodule.exports = abstractFileManager;"]}