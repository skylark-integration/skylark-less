{"version":3,"sources":["engine/environment/environment.js"],"names":["define","__module__0","exports","module","logger","environment","externalEnvironment","fileManagers","this","requiredFunctions","functions","concat","i","length","propName","environmentFunc","bind","warn","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","prototype","getFileManager","filename","currentDirectory","options","isSync","pluginManager","getFileManagers","fileManager","addFileManager","push","clearFileManagers"],"mappings":";;;;;;;AAAAA,QAAQ,aAAc,SAAUC,GAC5B,aACA,IAAIC,KACAC,GAAWD,YACXE,EAASH,EACTI,EAAc,SAAUC,EAAqBC,GAC7CC,KAAKD,aAAeA,MACpBD,EAAsBA,MAOtB,IANA,IAKOG,KAAwBC,EAAYD,EAAkBE,QAJrD,eACA,aACA,gBACA,0BAECC,EAAI,EAAGA,EAAIF,EAAUG,OAAQD,IAAK,CACvC,IAAIE,EAAWJ,EAAUE,GAAIG,EAAkBT,EAAoBQ,GAC/DC,EACAP,KAAKM,GAAYC,EAAgBC,KAAKV,GAC/BM,EAAIH,EAAkBI,QAC7BL,KAAKS,KAAK,8CAAgDH,KAoCtE,SAASI,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAnCAd,EAAYmB,UAAUC,eAAiB,SAAUC,EAAUC,EAAkBC,EAASvB,EAAawB,GAC1FH,GACDtB,EAAOa,KAAK,kFAEQ,MAApBU,GACAvB,EAAOa,KAAK,qFAEhB,IAAIV,EAAeC,KAAKD,aACpBqB,EAAQE,gBACRvB,KAAkBI,OAAOJ,GAAcI,OAAOiB,EAAQE,cAAcC,oBAExE,IAAK,IAAInB,EAAIL,EAAaM,OAAS,EAAGD,GAAK,EAAGA,IAAK,CAC/C,IAAIoB,EAAczB,EAAaK,GAC/B,GAAIoB,EAAYH,EAAS,eAAiB,YAAYH,EAAUC,EAAkBC,EAASvB,GACvF,OAAO2B,EAGf,OAAO,MAEX3B,EAAYmB,UAAUS,eAAiB,SAAUD,GAC7CxB,KAAKD,aAAa2B,KAAKF,IAE3B3B,EAAYmB,UAAUW,kBAAoB,WACtC3B,KAAKD,iBAETJ,EAAOD,QAAUG,EAUba,EAAkBf,EAAOD,SAClBC,EAAOD,QACTgB,EAAkBhB,GAChBA,OADN","file":"../../../engine/environment/environment.js","sourcesContent":["define(['../logger'], function (__module__0) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var logger = __module__0;\n    var environment = function (externalEnvironment, fileManagers) {\n        this.fileManagers = fileManagers || [];\n        externalEnvironment = externalEnvironment || {};\n        var optionalFunctions = [\n                'encodeBase64',\n                'mimeLookup',\n                'charsetLookup',\n                'getSourceMapGenerator'\n            ], requiredFunctions = [], functions = requiredFunctions.concat(optionalFunctions);\n        for (var i = 0; i < functions.length; i++) {\n            var propName = functions[i], environmentFunc = externalEnvironment[propName];\n            if (environmentFunc) {\n                this[propName] = environmentFunc.bind(externalEnvironment);\n            } else if (i < requiredFunctions.length) {\n                this.warn('missing required function in environment - ' + propName);\n            }\n        }\n    };\n    environment.prototype.getFileManager = function (filename, currentDirectory, options, environment, isSync) {\n        if (!filename) {\n            logger.warn('getFileManager called with no filename.. Please report this issue. continuing.');\n        }\n        if (currentDirectory == null) {\n            logger.warn('getFileManager called with null directory.. Please report this issue. continuing.');\n        }\n        var fileManagers = this.fileManagers;\n        if (options.pluginManager) {\n            fileManagers = [].concat(fileManagers).concat(options.pluginManager.getFileManagers());\n        }\n        for (var i = fileManagers.length - 1; i >= 0; i--) {\n            var fileManager = fileManagers[i];\n            if (fileManager[isSync ? 'supportsSync' : 'supports'](filename, currentDirectory, options, environment)) {\n                return fileManager;\n            }\n        }\n        return null;\n    };\n    environment.prototype.addFileManager = function (fileManager) {\n        this.fileManagers.push(fileManager);\n    };\n    environment.prototype.clearFileManagers = function () {\n        this.fileManagers = [];\n    };\n    module.exports = environment;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}