{"version":3,"sources":["engine/visitors/import-visitor.js"],"names":["contexts","require","Visitor","ImportSequencer","utils","ImportVisitor","importer","finish","this","_visitor","_importer","_finish","context","Eval","importCount","onceFileDetectionMap","recursionDetector","_sequencer","_onSequencerEmpty","bind","prototype","isReplacing","run","root","visit","e","error","isFinished","tryRun","visitImport","importNode","visitArgs","inlineCSS","options","inline","css","copyArray","frames","importParent","isVariableImport","addVariableImport","processImportNode","visitDeeper","evaldImportNode","evalForImport","filename","index","getIndex","fileInfo","multiple","importMultiple","tryAppendLessExtension","undefined","i","rules","length","onImported","sequencedOnImported","addImport","push","getPath","importedAtRoot","fullPath","importVisitor","isPlugin","isOptional","optional","duplicateImport","skip","importedFilename","oldContext","visitDeclaration","declNode","value","type","unshift","visitDeclarationOut","shift","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut","module","exports"],"mappings":"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","file":"../../../engine/visitors/import-visitor.js","sourcesContent":["var contexts = require('../contexts'), Visitor = require('./visitor'), ImportSequencer = require('./import-sequencer'), utils = require('../utils');\nvar ImportVisitor = function (importer, finish) {\n    this._visitor = new Visitor(this);\n    this._importer = importer;\n    this._finish = finish;\n    this.context = new contexts.Eval();\n    this.importCount = 0;\n    this.onceFileDetectionMap = {};\n    this.recursionDetector = {};\n    this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\n};\nImportVisitor.prototype = {\n    isReplacing: false,\n    run: function (root) {\n        try {\n            this._visitor.visit(root);\n        } catch (e) {\n            this.error = e;\n        }\n        this.isFinished = true;\n        this._sequencer.tryRun();\n    },\n    _onSequencerEmpty: function () {\n        if (!this.isFinished) {\n            return;\n        }\n        this._finish(this.error);\n    },\n    visitImport: function (importNode, visitArgs) {\n        var inlineCSS = importNode.options.inline;\n        if (!importNode.css || inlineCSS) {\n            var context = new contexts.Eval(this.context, utils.copyArray(this.context.frames));\n            var importParent = context.frames[0];\n            this.importCount++;\n            if (importNode.isVariableImport()) {\n                this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\n            } else {\n                this.processImportNode(importNode, context, importParent);\n            }\n        }\n        visitArgs.visitDeeper = false;\n    },\n    processImportNode: function (importNode, context, importParent) {\n        var evaldImportNode, inlineCSS = importNode.options.inline;\n        try {\n            evaldImportNode = importNode.evalForImport(context);\n        } catch (e) {\n            if (!e.filename) {\n                e.index = importNode.getIndex();\n                e.filename = importNode.fileInfo().filename;\n            }\n            importNode.css = true;\n            importNode.error = e;\n        }\n        if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\n            if (evaldImportNode.options.multiple) {\n                context.importMultiple = true;\n            }\n            var tryAppendLessExtension = evaldImportNode.css === undefined;\n            for (var i = 0; i < importParent.rules.length; i++) {\n                if (importParent.rules[i] === importNode) {\n                    importParent.rules[i] = evaldImportNode;\n                    break;\n                }\n            }\n            var onImported = this.onImported.bind(this, evaldImportNode, context), sequencedOnImported = this._sequencer.addImport(onImported);\n            this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\n        } else {\n            this.importCount--;\n            if (this.isFinished) {\n                this._sequencer.tryRun();\n            }\n        }\n    },\n    onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\n        if (e) {\n            if (!e.filename) {\n                e.index = importNode.getIndex();\n                e.filename = importNode.fileInfo().filename;\n            }\n            this.error = e;\n        }\n        var importVisitor = this, inlineCSS = importNode.options.inline, isPlugin = importNode.options.isPlugin, isOptional = importNode.options.optional, duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\n        if (!context.importMultiple) {\n            if (duplicateImport) {\n                importNode.skip = true;\n            } else {\n                importNode.skip = function () {\n                    if (fullPath in importVisitor.onceFileDetectionMap) {\n                        return true;\n                    }\n                    importVisitor.onceFileDetectionMap[fullPath] = true;\n                    return false;\n                };\n            }\n        }\n        if (!fullPath && isOptional) {\n            importNode.skip = true;\n        }\n        if (root) {\n            importNode.root = root;\n            importNode.importedFilename = fullPath;\n            if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\n                importVisitor.recursionDetector[fullPath] = true;\n                var oldContext = this.context;\n                this.context = context;\n                try {\n                    this._visitor.visit(root);\n                } catch (e) {\n                    this.error = e;\n                }\n                this.context = oldContext;\n            }\n        }\n        importVisitor.importCount--;\n        if (importVisitor.isFinished) {\n            importVisitor._sequencer.tryRun();\n        }\n    },\n    visitDeclaration: function (declNode, visitArgs) {\n        if (declNode.value.type === 'DetachedRuleset') {\n            this.context.frames.unshift(declNode);\n        } else {\n            visitArgs.visitDeeper = false;\n        }\n    },\n    visitDeclarationOut: function (declNode) {\n        if (declNode.value.type === 'DetachedRuleset') {\n            this.context.frames.shift();\n        }\n    },\n    visitAtRule: function (atRuleNode, visitArgs) {\n        this.context.frames.unshift(atRuleNode);\n    },\n    visitAtRuleOut: function (atRuleNode) {\n        this.context.frames.shift();\n    },\n    visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n        this.context.frames.unshift(mixinDefinitionNode);\n    },\n    visitMixinDefinitionOut: function (mixinDefinitionNode) {\n        this.context.frames.shift();\n    },\n    visitRuleset: function (rulesetNode, visitArgs) {\n        this.context.frames.unshift(rulesetNode);\n    },\n    visitRulesetOut: function (rulesetNode) {\n        this.context.frames.shift();\n    },\n    visitMedia: function (mediaNode, visitArgs) {\n        this.context.frames.unshift(mediaNode.rules[0]);\n    },\n    visitMediaOut: function (mediaNode) {\n        this.context.frames.shift();\n    }\n};\nmodule.exports = ImportVisitor;"]}