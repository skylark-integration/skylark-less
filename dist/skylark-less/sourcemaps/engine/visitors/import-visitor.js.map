{"version":3,"sources":["engine/visitors/import-visitor.js"],"names":["define","__module__0","__module__1","__module__2","__module__3","exports","module","contexts","Visitor","ImportSequencer","utils","ImportVisitor","importer","finish","this","_visitor","_importer","_finish","context","Eval","importCount","onceFileDetectionMap","recursionDetector","_sequencer","_onSequencerEmpty","bind","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","prototype","isReplacing","run","root","visit","e","error","isFinished","tryRun","visitImport","importNode","visitArgs","inlineCSS","options","inline","css","copyArray","frames","importParent","isVariableImport","addVariableImport","processImportNode","visitDeeper","evaldImportNode","evalForImport","filename","index","getIndex","fileInfo","multiple","importMultiple","tryAppendLessExtension","undefined","i","rules","length","onImported","sequencedOnImported","addImport","push","getPath","importedAtRoot","fullPath","importVisitor","isPlugin","isOptional","optional","duplicateImport","skip","importedFilename","oldContext","visitDeclaration","declNode","value","type","unshift","visitDeclarationOut","shift","visitAtRule","atRuleNode","visitAtRuleOut","visitMixinDefinition","mixinDefinitionNode","visitMixinDefinitionOut","visitRuleset","rulesetNode","visitRulesetOut","visitMedia","mediaNode","visitMediaOut"],"mappings":"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","file":"../../../engine/visitors/import-visitor.js","sourcesContent":["define([\n    '../contexts',\n    './visitor',\n    './import-sequencer',\n    '../utils'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var contexts = __module__0, Visitor = __module__1, ImportSequencer = __module__2, utils = __module__3;\n    var ImportVisitor = function (importer, finish) {\n        this._visitor = new Visitor(this);\n        this._importer = importer;\n        this._finish = finish;\n        this.context = new contexts.Eval();\n        this.importCount = 0;\n        this.onceFileDetectionMap = {};\n        this.recursionDetector = {};\n        this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\n    };\n    ImportVisitor.prototype = {\n        isReplacing: false,\n        run: function (root) {\n            try {\n                this._visitor.visit(root);\n            } catch (e) {\n                this.error = e;\n            }\n            this.isFinished = true;\n            this._sequencer.tryRun();\n        },\n        _onSequencerEmpty: function () {\n            if (!this.isFinished) {\n                return;\n            }\n            this._finish(this.error);\n        },\n        visitImport: function (importNode, visitArgs) {\n            var inlineCSS = importNode.options.inline;\n            if (!importNode.css || inlineCSS) {\n                var context = new contexts.Eval(this.context, utils.copyArray(this.context.frames));\n                var importParent = context.frames[0];\n                this.importCount++;\n                if (importNode.isVariableImport()) {\n                    this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\n                } else {\n                    this.processImportNode(importNode, context, importParent);\n                }\n            }\n            visitArgs.visitDeeper = false;\n        },\n        processImportNode: function (importNode, context, importParent) {\n            var evaldImportNode, inlineCSS = importNode.options.inline;\n            try {\n                evaldImportNode = importNode.evalForImport(context);\n            } catch (e) {\n                if (!e.filename) {\n                    e.index = importNode.getIndex();\n                    e.filename = importNode.fileInfo().filename;\n                }\n                importNode.css = true;\n                importNode.error = e;\n            }\n            if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\n                if (evaldImportNode.options.multiple) {\n                    context.importMultiple = true;\n                }\n                var tryAppendLessExtension = evaldImportNode.css === undefined;\n                for (var i = 0; i < importParent.rules.length; i++) {\n                    if (importParent.rules[i] === importNode) {\n                        importParent.rules[i] = evaldImportNode;\n                        break;\n                    }\n                }\n                var onImported = this.onImported.bind(this, evaldImportNode, context), sequencedOnImported = this._sequencer.addImport(onImported);\n                this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.fileInfo(), evaldImportNode.options, sequencedOnImported);\n            } else {\n                this.importCount--;\n                if (this.isFinished) {\n                    this._sequencer.tryRun();\n                }\n            }\n        },\n        onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\n            if (e) {\n                if (!e.filename) {\n                    e.index = importNode.getIndex();\n                    e.filename = importNode.fileInfo().filename;\n                }\n                this.error = e;\n            }\n            var importVisitor = this, inlineCSS = importNode.options.inline, isPlugin = importNode.options.isPlugin, isOptional = importNode.options.optional, duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\n            if (!context.importMultiple) {\n                if (duplicateImport) {\n                    importNode.skip = true;\n                } else {\n                    importNode.skip = function () {\n                        if (fullPath in importVisitor.onceFileDetectionMap) {\n                            return true;\n                        }\n                        importVisitor.onceFileDetectionMap[fullPath] = true;\n                        return false;\n                    };\n                }\n            }\n            if (!fullPath && isOptional) {\n                importNode.skip = true;\n            }\n            if (root) {\n                importNode.root = root;\n                importNode.importedFilename = fullPath;\n                if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\n                    importVisitor.recursionDetector[fullPath] = true;\n                    var oldContext = this.context;\n                    this.context = context;\n                    try {\n                        this._visitor.visit(root);\n                    } catch (e) {\n                        this.error = e;\n                    }\n                    this.context = oldContext;\n                }\n            }\n            importVisitor.importCount--;\n            if (importVisitor.isFinished) {\n                importVisitor._sequencer.tryRun();\n            }\n        },\n        visitDeclaration: function (declNode, visitArgs) {\n            if (declNode.value.type === 'DetachedRuleset') {\n                this.context.frames.unshift(declNode);\n            } else {\n                visitArgs.visitDeeper = false;\n            }\n        },\n        visitDeclarationOut: function (declNode) {\n            if (declNode.value.type === 'DetachedRuleset') {\n                this.context.frames.shift();\n            }\n        },\n        visitAtRule: function (atRuleNode, visitArgs) {\n            this.context.frames.unshift(atRuleNode);\n        },\n        visitAtRuleOut: function (atRuleNode) {\n            this.context.frames.shift();\n        },\n        visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n            this.context.frames.unshift(mixinDefinitionNode);\n        },\n        visitMixinDefinitionOut: function (mixinDefinitionNode) {\n            this.context.frames.shift();\n        },\n        visitRuleset: function (rulesetNode, visitArgs) {\n            this.context.frames.unshift(rulesetNode);\n        },\n        visitRulesetOut: function (rulesetNode) {\n            this.context.frames.shift();\n        },\n        visitMedia: function (mediaNode, visitArgs) {\n            this.context.frames.unshift(mediaNode.rules[0]);\n        },\n        visitMediaOut: function (mediaNode) {\n            this.context.frames.shift();\n        }\n    };\n    module.exports = ImportVisitor;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}