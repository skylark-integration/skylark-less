{"version":3,"sources":["engine/visitors/join-selector-visitor.js"],"names":["Visitor","require","JoinSelectorVisitor","this","contexts","_visitor","prototype","run","root","visit","visitDeclaration","declNode","visitArgs","visitDeeper","visitMixinDefinition","mixinDefinitionNode","visitRuleset","rulesetNode","selectors","context","length","paths","push","filter","selector","getIsOutput","joinSelectors","rules","visitRulesetOut","visitMedia","mediaNode","multiMedia","visitAtRule","atRuleNode","isRooted","module","exports"],"mappings":";;;;;;;AAAA,IAAIA,QAAUC,QAAQ,aAClBC,oBAAsB,WACtBC,KAAKC,cACLD,KAAKE,SAAW,IAAIL,QAAQG,OAEhCD,oBAAoBI,WAChBC,IAAK,SAAUC,GACX,OAAOL,KAAKE,SAASI,MAAMD,IAE/BE,iBAAkB,SAAUC,EAAUC,GAClCA,EAAUC,aAAc,GAE5BC,qBAAsB,SAAUC,EAAqBH,GACjDA,EAAUC,aAAc,GAE5BG,aAAc,SAAUC,EAAaL,GACjC,IAAmEM,EAA/DC,EAAUhB,KAAKC,SAASD,KAAKC,SAASgB,OAAS,GAAIC,KACvDlB,KAAKC,SAASkB,KAAKD,GACdJ,EAAYT,QACbU,EAAYD,EAAYC,aAEpBA,EAAYA,EAAUK,OAAO,SAAUC,GACnC,OAAOA,EAASC,gBAEpBR,EAAYC,UAAYA,EAAUE,OAASF,EAAYA,EAAY,KAC/DA,GACAD,EAAYS,cAAcL,EAAOF,EAASD,IAG7CA,IACDD,EAAYU,MAAQ,MAExBV,EAAYI,MAAQA,IAG5BO,gBAAiB,SAAUX,GACvBd,KAAKC,SAASgB,OAASjB,KAAKC,SAASgB,OAAS,GAElDS,WAAY,SAAUC,EAAWlB,GAC7B,IAAIO,EAAUhB,KAAKC,SAASD,KAAKC,SAASgB,OAAS,GACnDU,EAAUH,MAAM,GAAGnB,KAA0B,IAAnBW,EAAQC,QAAgBD,EAAQ,GAAGY,YAEjEC,YAAa,SAAUC,EAAYrB,GAC/B,IAAIO,EAAUhB,KAAKC,SAASD,KAAKC,SAASgB,OAAS,GAC/Ca,EAAWN,OAASM,EAAWN,MAAMP,SACrCa,EAAWN,MAAM,GAAGnB,KAAOyB,EAAWC,UAA+B,IAAnBf,EAAQC,QAAgB,QAItFe,OAAOC,QAAUlC","file":"../../../engine/visitors/join-selector-visitor.js","sourcesContent":["var Visitor = require('./visitor');\nvar JoinSelectorVisitor = function () {\n    this.contexts = [[]];\n    this._visitor = new Visitor(this);\n};\nJoinSelectorVisitor.prototype = {\n    run: function (root) {\n        return this._visitor.visit(root);\n    },\n    visitDeclaration: function (declNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitRuleset: function (rulesetNode, visitArgs) {\n        var context = this.contexts[this.contexts.length - 1], paths = [], selectors;\n        this.contexts.push(paths);\n        if (!rulesetNode.root) {\n            selectors = rulesetNode.selectors;\n            if (selectors) {\n                selectors = selectors.filter(function (selector) {\n                    return selector.getIsOutput();\n                });\n                rulesetNode.selectors = selectors.length ? selectors : selectors = null;\n                if (selectors) {\n                    rulesetNode.joinSelectors(paths, context, selectors);\n                }\n            }\n            if (!selectors) {\n                rulesetNode.rules = null;\n            }\n            rulesetNode.paths = paths;\n        }\n    },\n    visitRulesetOut: function (rulesetNode) {\n        this.contexts.length = this.contexts.length - 1;\n    },\n    visitMedia: function (mediaNode, visitArgs) {\n        var context = this.contexts[this.contexts.length - 1];\n        mediaNode.rules[0].root = context.length === 0 || context[0].multiMedia;\n    },\n    visitAtRule: function (atRuleNode, visitArgs) {\n        var context = this.contexts[this.contexts.length - 1];\n        if (atRuleNode.rules && atRuleNode.rules.length) {\n            atRuleNode.rules[0].root = atRuleNode.isRooted || context.length === 0 || null;\n        }\n    }\n};\nmodule.exports = JoinSelectorVisitor;"]}