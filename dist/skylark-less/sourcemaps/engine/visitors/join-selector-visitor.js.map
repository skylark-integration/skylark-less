{"version":3,"sources":["engine/visitors/join-selector-visitor.js"],"names":["define","__module__0","exports","module","Visitor","JoinSelectorVisitor","this","contexts","_visitor","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","prototype","run","root","visit","visitDeclaration","declNode","visitArgs","visitDeeper","visitMixinDefinition","mixinDefinitionNode","visitRuleset","rulesetNode","selectors","context","length","paths","push","filter","selector","getIsOutput","joinSelectors","rules","visitRulesetOut","visitMedia","mediaNode","multiMedia","visitAtRule","atRuleNode","isRooted"],"mappings":";;;;;;;AAAAA,QAAQ,aAAc,SAAUC,GAC5B,aACA,IAAIC,KACAC,GAAWD,YACXE,EAAUH,EACVI,EAAsB,WACtBC,KAAKC,cACLD,KAAKE,SAAW,IAAIJ,EAAQE,OAqDhC,SAASG,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAtDAL,EAAoBU,WAChBC,IAAK,SAAUC,GACX,OAAOX,KAAKE,SAASU,MAAMD,IAE/BE,iBAAkB,SAAUC,EAAUC,GAClCA,EAAUC,aAAc,GAE5BC,qBAAsB,SAAUC,EAAqBH,GACjDA,EAAUC,aAAc,GAE5BG,aAAc,SAAUC,EAAaL,GACjC,IAAmEM,EAA/DC,EAAUtB,KAAKC,SAASD,KAAKC,SAASsB,OAAS,GAAIC,KACvDxB,KAAKC,SAASwB,KAAKD,GACdJ,EAAYT,QACbU,EAAYD,EAAYC,aAEpBA,EAAYA,EAAUK,OAAO,SAAUC,GACnC,OAAOA,EAASC,gBAEpBR,EAAYC,UAAYA,EAAUE,OAASF,EAAYA,EAAY,KAC/DA,GACAD,EAAYS,cAAcL,EAAOF,EAASD,IAG7CA,IACDD,EAAYU,MAAQ,MAExBV,EAAYI,MAAQA,IAG5BO,gBAAiB,SAAUX,GACvBpB,KAAKC,SAASsB,OAASvB,KAAKC,SAASsB,OAAS,GAElDS,WAAY,SAAUC,EAAWlB,GAC7B,IAAIO,EAAUtB,KAAKC,SAASD,KAAKC,SAASsB,OAAS,GACnDU,EAAUH,MAAM,GAAGnB,KAA0B,IAAnBW,EAAQC,QAAgBD,EAAQ,GAAGY,YAEjEC,YAAa,SAAUC,EAAYrB,GAC/B,IAAIO,EAAUtB,KAAKC,SAASD,KAAKC,SAASsB,OAAS,GAC/Ca,EAAWN,OAASM,EAAWN,MAAMP,SACrCa,EAAWN,MAAM,GAAGnB,KAAOyB,EAAWC,UAA+B,IAAnBf,EAAQC,QAAgB,QAItF1B,EAAOD,QAAUG,EAUbI,EAAkBN,EAAOD,SAClBC,EAAOD,QACTO,EAAkBP,GAChBA,OADN","file":"../../../engine/visitors/join-selector-visitor.js","sourcesContent":["define(['./visitor'], function (__module__0) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var Visitor = __module__0;\n    var JoinSelectorVisitor = function () {\n        this.contexts = [[]];\n        this._visitor = new Visitor(this);\n    };\n    JoinSelectorVisitor.prototype = {\n        run: function (root) {\n            return this._visitor.visit(root);\n        },\n        visitDeclaration: function (declNode, visitArgs) {\n            visitArgs.visitDeeper = false;\n        },\n        visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n            visitArgs.visitDeeper = false;\n        },\n        visitRuleset: function (rulesetNode, visitArgs) {\n            var context = this.contexts[this.contexts.length - 1], paths = [], selectors;\n            this.contexts.push(paths);\n            if (!rulesetNode.root) {\n                selectors = rulesetNode.selectors;\n                if (selectors) {\n                    selectors = selectors.filter(function (selector) {\n                        return selector.getIsOutput();\n                    });\n                    rulesetNode.selectors = selectors.length ? selectors : selectors = null;\n                    if (selectors) {\n                        rulesetNode.joinSelectors(paths, context, selectors);\n                    }\n                }\n                if (!selectors) {\n                    rulesetNode.rules = null;\n                }\n                rulesetNode.paths = paths;\n            }\n        },\n        visitRulesetOut: function (rulesetNode) {\n            this.contexts.length = this.contexts.length - 1;\n        },\n        visitMedia: function (mediaNode, visitArgs) {\n            var context = this.contexts[this.contexts.length - 1];\n            mediaNode.rules[0].root = context.length === 0 || context[0].multiMedia;\n        },\n        visitAtRule: function (atRuleNode, visitArgs) {\n            var context = this.contexts[this.contexts.length - 1];\n            if (atRuleNode.rules && atRuleNode.rules.length) {\n                atRuleNode.rules[0].root = atRuleNode.isRooted || context.length === 0 || null;\n            }\n        }\n    };\n    module.exports = JoinSelectorVisitor;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}