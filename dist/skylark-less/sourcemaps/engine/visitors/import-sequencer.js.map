{"version":3,"sources":["engine/visitors/import-sequencer.js"],"names":["ImportSequencer","onSequencerEmpty","this","imports","variableImports","_onSequencerEmpty","_currentDepth","prototype","addImport","callback","importSequencer","importItem","args","isReady","push","Array","slice","call","arguments","tryRun","addVariableImport","length","apply","variableImport","module","exports"],"mappings":";;;;;;;AAAA,SAASA,gBAAgBC,GACrBC,KAAKC,WACLD,KAAKE,mBACLF,KAAKG,kBAAoBJ,EACzBC,KAAKI,cAAgB,EAEzBN,gBAAgBO,UAAUC,UAAY,SAAUC,GAC5C,IAAIC,EAAkBR,KAAMS,GACpBF,SAAUA,EACVG,KAAM,KACNC,SAAS,GAGjB,OADAX,KAAKC,QAAQW,KAAKH,GACX,WACHA,EAAWC,KAAOG,MAAMR,UAAUS,MAAMC,KAAKC,UAAW,GACxDP,EAAWE,SAAU,EACrBH,EAAgBS,WAGxBnB,gBAAgBO,UAAUa,kBAAoB,SAAUX,GACpDP,KAAKE,gBAAgBU,KAAKL,IAE9BT,gBAAgBO,UAAUY,OAAS,WAC/BjB,KAAKI,gBACL,IACI,OAAa,CACT,KAAOJ,KAAKC,QAAQkB,OAAS,GAAG,CAC5B,IAAIV,EAAaT,KAAKC,QAAQ,GAC9B,IAAKQ,EAAWE,QACZ,OAEJX,KAAKC,QAAUD,KAAKC,QAAQa,MAAM,GAClCL,EAAWF,SAASa,MAAM,KAAMX,EAAWC,MAE/C,GAAoC,IAAhCV,KAAKE,gBAAgBiB,OACrB,MAEJ,IAAIE,EAAiBrB,KAAKE,gBAAgB,GAC1CF,KAAKE,gBAAkBF,KAAKE,gBAAgBY,MAAM,GAClDO,KAEN,QACErB,KAAKI,gBAEkB,IAAvBJ,KAAKI,eAAuBJ,KAAKG,mBACjCH,KAAKG,qBAGbmB,OAAOC,QAAUzB","file":"../../../engine/visitors/import-sequencer.js","sourcesContent":["function ImportSequencer(onSequencerEmpty) {\n    this.imports = [];\n    this.variableImports = [];\n    this._onSequencerEmpty = onSequencerEmpty;\n    this._currentDepth = 0;\n}\nImportSequencer.prototype.addImport = function (callback) {\n    var importSequencer = this, importItem = {\n            callback: callback,\n            args: null,\n            isReady: false\n        };\n    this.imports.push(importItem);\n    return function () {\n        importItem.args = Array.prototype.slice.call(arguments, 0);\n        importItem.isReady = true;\n        importSequencer.tryRun();\n    };\n};\nImportSequencer.prototype.addVariableImport = function (callback) {\n    this.variableImports.push(callback);\n};\nImportSequencer.prototype.tryRun = function () {\n    this._currentDepth++;\n    try {\n        while (true) {\n            while (this.imports.length > 0) {\n                var importItem = this.imports[0];\n                if (!importItem.isReady) {\n                    return;\n                }\n                this.imports = this.imports.slice(1);\n                importItem.callback.apply(null, importItem.args);\n            }\n            if (this.variableImports.length === 0) {\n                break;\n            }\n            var variableImport = this.variableImports[0];\n            this.variableImports = this.variableImports.slice(1);\n            variableImport();\n        }\n    } finally {\n        this._currentDepth--;\n    }\n    if (this._currentDepth === 0 && this._onSequencerEmpty) {\n        this._onSequencerEmpty();\n    }\n};\nmodule.exports = ImportSequencer;"]}