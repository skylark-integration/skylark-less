{"version":3,"sources":["engine/visitors/set-tree-visibility-visitor.js"],"names":["define","exports","module","SetTreeVisibilityVisitor","visible","this","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","prototype","run","root","visit","visitArray","nodes","i","cnt","length","node","constructor","blocksVisibility","ensureVisibility","ensureInvisibility","accept"],"mappings":";;;;;;;AAAAA,UAAW,WACP,aACA,IAAIC,KACAC,GAAWD,YACXE,EAA2B,SAAUC,GACrCC,KAAKD,QAAUA,GAwCnB,SAASE,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAzCAJ,EAAyBS,UAAUC,IAAM,SAAUC,GAC/CT,KAAKU,MAAMD,IAEfX,EAAyBS,UAAUI,WAAa,SAAUC,GACtD,IAAKA,EACD,OAAOA,EAEX,IAAwBC,EAApBC,EAAMF,EAAMG,OAChB,IAAKF,EAAI,EAAGA,EAAIC,EAAKD,IACjBb,KAAKU,MAAME,EAAMC,IAErB,OAAOD,GAEXd,EAAyBS,UAAUG,MAAQ,SAAUM,GACjD,OAAKA,EAGDA,EAAKC,cAAgBd,MACdH,KAAKW,WAAWK,IAEtBA,EAAKE,kBAAoBF,EAAKE,mBACxBF,GAEPhB,KAAKD,QACLiB,EAAKG,mBAELH,EAAKI,qBAETJ,EAAKK,OAAOrB,MACLgB,GAdIA,GAgBfnB,EAAOD,QAAUE,EAUbG,EAAkBJ,EAAOD,SAClBC,EAAOD,QACTK,EAAkBL,GAChBA,OADN","file":"../../../engine/visitors/set-tree-visibility-visitor.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var SetTreeVisibilityVisitor = function (visible) {\n        this.visible = visible;\n    };\n    SetTreeVisibilityVisitor.prototype.run = function (root) {\n        this.visit(root);\n    };\n    SetTreeVisibilityVisitor.prototype.visitArray = function (nodes) {\n        if (!nodes) {\n            return nodes;\n        }\n        var cnt = nodes.length, i;\n        for (i = 0; i < cnt; i++) {\n            this.visit(nodes[i]);\n        }\n        return nodes;\n    };\n    SetTreeVisibilityVisitor.prototype.visit = function (node) {\n        if (!node) {\n            return node;\n        }\n        if (node.constructor === Array) {\n            return this.visitArray(node);\n        }\n        if (!node.blocksVisibility || node.blocksVisibility()) {\n            return node;\n        }\n        if (this.visible) {\n            node.ensureVisibility();\n        } else {\n            node.ensureInvisibility();\n        }\n        node.accept(this);\n        return node;\n    };\n    module.exports = SetTreeVisibilityVisitor;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}