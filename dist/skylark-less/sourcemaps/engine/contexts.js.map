{"version":3,"sources":["engine/contexts.js"],"names":["define","__module__0","exports","module","contexts","Constants","copyFromOriginal","original","destination","propertiesToCopy","i","length","hasOwnProperty","parseCopyProperties","Parse","options","this","paths","evalCopyProperties","isPathRelative","path","test","isPathLocalRelative","charAt","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","Eval","frames","importantScope","prototype","enterCalc","calcStack","push","inCalc","exitCalc","pop","inParenthesis","parensStack","outOfParenthesis","mathOn","isMathOn","op","math","Math","ALWAYS","PARENS_DIVISION","pathRequiresRewrite","rewriteUrls","RewriteUrls","LOCAL","rewritePath","rootpath","newPath","normalizePath","segment","segments","split","reverse","join"],"mappings":"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","file":"../../engine/contexts.js","sourcesContent":["define(['./constants'], function (__module__0) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var contexts = {};\n    module.exports = contexts;\n    var Constants = __module__0;\n    var copyFromOriginal = function copyFromOriginal(original, destination, propertiesToCopy) {\n        if (!original) {\n            return;\n        }\n        for (var i = 0; i < propertiesToCopy.length; i++) {\n            if (original.hasOwnProperty(propertiesToCopy[i])) {\n                destination[propertiesToCopy[i]] = original[propertiesToCopy[i]];\n            }\n        }\n    };\n    var parseCopyProperties = [\n        'paths',\n        'rewriteUrls',\n        'rootpath',\n        'strictImports',\n        'insecure',\n        'dumpLineNumbers',\n        'compress',\n        'syncImport',\n        'chunkInput',\n        'mime',\n        'useFileCache',\n        'processImports',\n        'pluginManager'\n    ];\n    contexts.Parse = function (options) {\n        copyFromOriginal(options, this, parseCopyProperties);\n        if (typeof this.paths === 'string') {\n            this.paths = [this.paths];\n        }\n    };\n    var evalCopyProperties = [\n        'paths',\n        'compress',\n        'ieCompat',\n        'math',\n        'strictUnits',\n        'sourceMap',\n        'importMultiple',\n        'urlArgs',\n        'javascriptEnabled',\n        'pluginManager',\n        'importantScope',\n        'rewriteUrls'\n    ];\n    contexts.Eval = function (options, frames) {\n        copyFromOriginal(options, this, evalCopyProperties);\n        if (typeof this.paths === 'string') {\n            this.paths = [this.paths];\n        }\n        this.frames = frames || [];\n        this.importantScope = this.importantScope || [];\n    };\n    contexts.Eval.prototype.enterCalc = function () {\n        if (!this.calcStack) {\n            this.calcStack = [];\n        }\n        this.calcStack.push(true);\n        this.inCalc = true;\n    };\n    contexts.Eval.prototype.exitCalc = function () {\n        this.calcStack.pop();\n        if (!this.calcStack) {\n            this.inCalc = false;\n        }\n    };\n    contexts.Eval.prototype.inParenthesis = function () {\n        if (!this.parensStack) {\n            this.parensStack = [];\n        }\n        this.parensStack.push(true);\n    };\n    contexts.Eval.prototype.outOfParenthesis = function () {\n        this.parensStack.pop();\n    };\n    contexts.Eval.prototype.inCalc = false;\n    contexts.Eval.prototype.mathOn = true;\n    contexts.Eval.prototype.isMathOn = function (op) {\n        if (!this.mathOn) {\n            return false;\n        }\n        if (op === '/' && this.math !== Constants.Math.ALWAYS && (!this.parensStack || !this.parensStack.length)) {\n            return false;\n        }\n        if (this.math > Constants.Math.PARENS_DIVISION) {\n            return this.parensStack && this.parensStack.length;\n        }\n        return true;\n    };\n    contexts.Eval.prototype.pathRequiresRewrite = function (path) {\n        var isRelative = this.rewriteUrls === Constants.RewriteUrls.LOCAL ? isPathLocalRelative : isPathRelative;\n        return isRelative(path);\n    };\n    contexts.Eval.prototype.rewritePath = function (path, rootpath) {\n        var newPath;\n        rootpath = rootpath || '';\n        newPath = this.normalizePath(rootpath + path);\n        if (isPathLocalRelative(path) && isPathRelative(rootpath) && isPathLocalRelative(newPath) === false) {\n            newPath = './' + newPath;\n        }\n        return newPath;\n    };\n    contexts.Eval.prototype.normalizePath = function (path) {\n        var segments = path.split('/').reverse(), segment;\n        path = [];\n        while (segments.length !== 0) {\n            segment = segments.pop();\n            switch (segment) {\n            case '.':\n                break;\n            case '..':\n                if (path.length === 0 || path[path.length - 1] === '..') {\n                    path.push(segment);\n                } else {\n                    path.pop();\n                }\n                break;\n            default:\n                path.push(segment);\n                break;\n            }\n        }\n        return path.join('/');\n    };\n    function isPathRelative(path) {\n        return !/^(?:[a-z-]+:|\\/|#)/i.test(path);\n    }\n    function isPathLocalRelative(path) {\n        return path.charAt(0) === '.';\n    }\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}