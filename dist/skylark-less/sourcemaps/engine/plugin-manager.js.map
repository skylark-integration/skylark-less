{"version":3,"sources":["engine/plugin-manager.js"],"names":["define","pm","exports","module","PluginManager","less","this","visitors","preProcessors","postProcessors","installedPlugins","fileManagers","iterator","pluginCache","Loader","PluginLoader","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","prototype","addPlugins","plugins","i","length","addPlugin","plugin","filename","functionRegistry","push","install","functions","get","addVisitor","visitor","addPreProcessor","preProcessor","priority","indexToInsertAt","splice","addPostProcessor","postProcessor","addFileManager","manager","getPreProcessors","getPostProcessors","getVisitors","self","first","getFileManagers","newFactory"],"mappings":";;;;;;;AAAAA,UAAW,WACP,aACA,IAaIC,EAbAC,KACAC,GAAWD,YACXE,EAAgB,SAAUC,GAC1BC,KAAKD,KAAOA,EACZC,KAAKC,YACLD,KAAKE,iBACLF,KAAKG,kBACLH,KAAKI,oBACLJ,KAAKK,gBACLL,KAAKM,UAAY,EACjBN,KAAKO,eACLP,KAAKQ,OAAS,IAAIT,EAAKU,aAAaV,IAiGxC,SAASW,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OA5FAb,EAAckB,UAAUC,WAAa,SAAUC,GAC3C,GAAIA,EACA,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQE,OAAQD,IAChCnB,KAAKqB,UAAUH,EAAQC,KAInCrB,EAAckB,UAAUK,UAAY,SAAUC,EAAQC,EAAUC,GAC5DxB,KAAKI,iBAAiBqB,KAAKH,GACvBC,IACAvB,KAAKO,YAAYgB,GAAYD,GAE7BA,EAAOI,SACPJ,EAAOI,QAAQ1B,KAAKD,KAAMC,KAAMwB,GAAoBxB,KAAKD,KAAK4B,UAAUH,mBAGhF1B,EAAckB,UAAUY,IAAM,SAAUL,GACpC,OAAOvB,KAAKO,YAAYgB,IAE5BzB,EAAckB,UAAUa,WAAa,SAAUC,GAC3C9B,KAAKC,SAASwB,KAAKK,IAEvBhC,EAAckB,UAAUe,gBAAkB,SAAUC,EAAcC,GAC9D,IAAIC,EACJ,IAAKA,EAAkB,EAAGA,EAAkBlC,KAAKE,cAAckB,UACvDpB,KAAKE,cAAcgC,GAAiBD,UAAYA,GADeC,KAKvElC,KAAKE,cAAciC,OAAOD,EAAiB,GACvCF,aAAcA,EACdC,SAAUA,KAGlBnC,EAAckB,UAAUoB,iBAAmB,SAAUC,EAAeJ,GAChE,IAAIC,EACJ,IAAKA,EAAkB,EAAGA,EAAkBlC,KAAKG,eAAeiB,UACxDpB,KAAKG,eAAe+B,GAAiBD,UAAYA,GADeC,KAKxElC,KAAKG,eAAegC,OAAOD,EAAiB,GACxCG,cAAeA,EACfJ,SAAUA,KAGlBnC,EAAckB,UAAUsB,eAAiB,SAAUC,GAC/CvC,KAAKK,aAAaoB,KAAKc,IAE3BzC,EAAckB,UAAUwB,iBAAmB,WAEvC,IADA,IAAItC,KACKiB,EAAI,EAAGA,EAAInB,KAAKE,cAAckB,OAAQD,IAC3CjB,EAAcuB,KAAKzB,KAAKE,cAAciB,GAAGa,cAE7C,OAAO9B,GAEXJ,EAAckB,UAAUyB,kBAAoB,WAExC,IADA,IAAItC,KACKgB,EAAI,EAAGA,EAAInB,KAAKG,eAAeiB,OAAQD,IAC5ChB,EAAesB,KAAKzB,KAAKG,eAAegB,GAAGkB,eAE/C,OAAOlC,GAEXL,EAAckB,UAAU0B,YAAc,WAClC,OAAO1C,KAAKC,UAEhBH,EAAckB,UAAUc,QAAU,WAC9B,IAAIa,EAAO3C,KACX,OACI4C,MAAO,WAEH,OADAD,EAAKrC,UAAY,EACVqC,EAAK1C,SAAS0C,EAAKrC,WAE9BsB,IAAK,WAED,OADAe,EAAKrC,UAAY,EACVqC,EAAK1C,SAAS0C,EAAKrC,aAItCR,EAAckB,UAAU6B,gBAAkB,WACtC,OAAO7C,KAAKK,cAEhBR,EAAOD,QAxFwB,SAAUG,EAAM+C,GAIvC,OAHIA,GAAenD,IACfA,EAAK,IAAIG,EAAcC,IAEpBJ,GA8FXe,EAAkBb,EAAOD,SAClBC,EAAOD,QACTc,EAAkBd,GAChBA,OADN","file":"../../engine/plugin-manager.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var PluginManager = function (less) {\n        this.less = less;\n        this.visitors = [];\n        this.preProcessors = [];\n        this.postProcessors = [];\n        this.installedPlugins = [];\n        this.fileManagers = [];\n        this.iterator = -1;\n        this.pluginCache = {};\n        this.Loader = new less.PluginLoader(less);\n    };\n    var pm, PluginManagerFactory = function (less, newFactory) {\n            if (newFactory || !pm) {\n                pm = new PluginManager(less);\n            }\n            return pm;\n        };\n    PluginManager.prototype.addPlugins = function (plugins) {\n        if (plugins) {\n            for (var i = 0; i < plugins.length; i++) {\n                this.addPlugin(plugins[i]);\n            }\n        }\n    };\n    PluginManager.prototype.addPlugin = function (plugin, filename, functionRegistry) {\n        this.installedPlugins.push(plugin);\n        if (filename) {\n            this.pluginCache[filename] = plugin;\n        }\n        if (plugin.install) {\n            plugin.install(this.less, this, functionRegistry || this.less.functions.functionRegistry);\n        }\n    };\n    PluginManager.prototype.get = function (filename) {\n        return this.pluginCache[filename];\n    };\n    PluginManager.prototype.addVisitor = function (visitor) {\n        this.visitors.push(visitor);\n    };\n    PluginManager.prototype.addPreProcessor = function (preProcessor, priority) {\n        var indexToInsertAt;\n        for (indexToInsertAt = 0; indexToInsertAt < this.preProcessors.length; indexToInsertAt++) {\n            if (this.preProcessors[indexToInsertAt].priority >= priority) {\n                break;\n            }\n        }\n        this.preProcessors.splice(indexToInsertAt, 0, {\n            preProcessor: preProcessor,\n            priority: priority\n        });\n    };\n    PluginManager.prototype.addPostProcessor = function (postProcessor, priority) {\n        var indexToInsertAt;\n        for (indexToInsertAt = 0; indexToInsertAt < this.postProcessors.length; indexToInsertAt++) {\n            if (this.postProcessors[indexToInsertAt].priority >= priority) {\n                break;\n            }\n        }\n        this.postProcessors.splice(indexToInsertAt, 0, {\n            postProcessor: postProcessor,\n            priority: priority\n        });\n    };\n    PluginManager.prototype.addFileManager = function (manager) {\n        this.fileManagers.push(manager);\n    };\n    PluginManager.prototype.getPreProcessors = function () {\n        var preProcessors = [];\n        for (var i = 0; i < this.preProcessors.length; i++) {\n            preProcessors.push(this.preProcessors[i].preProcessor);\n        }\n        return preProcessors;\n    };\n    PluginManager.prototype.getPostProcessors = function () {\n        var postProcessors = [];\n        for (var i = 0; i < this.postProcessors.length; i++) {\n            postProcessors.push(this.postProcessors[i].postProcessor);\n        }\n        return postProcessors;\n    };\n    PluginManager.prototype.getVisitors = function () {\n        return this.visitors;\n    };\n    PluginManager.prototype.visitor = function () {\n        var self = this;\n        return {\n            first: function () {\n                self.iterator = -1;\n                return self.visitors[self.iterator];\n            },\n            get: function () {\n                self.iterator += 1;\n                return self.visitors[self.iterator];\n            }\n        };\n    };\n    PluginManager.prototype.getFileManagers = function () {\n        return this.fileManagers;\n    };\n    module.exports = PluginManagerFactory;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}