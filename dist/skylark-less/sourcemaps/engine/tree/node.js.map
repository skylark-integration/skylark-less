{"version":3,"sources":["engine/tree/node.js"],"names":["define","exports","module","Node","this","parent","visibilityBlocks","undefined","nodeVisible","rootNode","parsed","self","Object","defineProperty","get","fileInfo","getIndex","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","prototype","setParent","nodes","set","node","forEach","_index","_fileInfo","isRulesetLike","toCSS","context","strs","genCSS","add","chunk","index","push","isEmpty","length","join","output","value","accept","visitor","visit","eval","_operate","op","a","b","fround","precision","numPrecision","Number","toFixed","compare","type","i","numericCompare","blocksVisibility","addVisibilityBlock","removeVisibilityBlock","ensureVisibility","ensureInvisibility","isVisible","visibilityInfo","copyVisibilityInfo","info"],"mappings":"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","file":"../../../engine/tree/node.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var Node = function () {\n        this.parent = null;\n        this.visibilityBlocks = undefined;\n        this.nodeVisible = undefined;\n        this.rootNode = null;\n        this.parsed = null;\n        var self = this;\n        Object.defineProperty(this, 'currentFileInfo', {\n            get: function () {\n                return self.fileInfo();\n            }\n        });\n        Object.defineProperty(this, 'index', {\n            get: function () {\n                return self.getIndex();\n            }\n        });\n    };\n    Node.prototype.setParent = function (nodes, parent) {\n        function set(node) {\n            if (node && node instanceof Node) {\n                node.parent = parent;\n            }\n        }\n        if (Array.isArray(nodes)) {\n            nodes.forEach(set);\n        } else {\n            set(nodes);\n        }\n    };\n    Node.prototype.getIndex = function () {\n        return this._index || this.parent && this.parent.getIndex() || 0;\n    };\n    Node.prototype.fileInfo = function () {\n        return this._fileInfo || this.parent && this.parent.fileInfo() || {};\n    };\n    Node.prototype.isRulesetLike = function () {\n        return false;\n    };\n    Node.prototype.toCSS = function (context) {\n        var strs = [];\n        this.genCSS(context, {\n            add: function (chunk, fileInfo, index) {\n                strs.push(chunk);\n            },\n            isEmpty: function () {\n                return strs.length === 0;\n            }\n        });\n        return strs.join('');\n    };\n    Node.prototype.genCSS = function (context, output) {\n        output.add(this.value);\n    };\n    Node.prototype.accept = function (visitor) {\n        this.value = visitor.visit(this.value);\n    };\n    Node.prototype.eval = function () {\n        return this;\n    };\n    Node.prototype._operate = function (context, op, a, b) {\n        switch (op) {\n        case '+':\n            return a + b;\n        case '-':\n            return a - b;\n        case '*':\n            return a * b;\n        case '/':\n            return a / b;\n        }\n    };\n    Node.prototype.fround = function (context, value) {\n        var precision = context && context.numPrecision;\n        return precision ? Number((value + 2e-16).toFixed(precision)) : value;\n    };\n    Node.compare = function (a, b) {\n        if (a.compare && !(b.type === 'Quoted' || b.type === 'Anonymous')) {\n            return a.compare(b);\n        } else if (b.compare) {\n            return -b.compare(a);\n        } else if (a.type !== b.type) {\n            return undefined;\n        }\n        a = a.value;\n        b = b.value;\n        if (!Array.isArray(a)) {\n            return a === b ? 0 : undefined;\n        }\n        if (a.length !== b.length) {\n            return undefined;\n        }\n        for (var i = 0; i < a.length; i++) {\n            if (Node.compare(a[i], b[i]) !== 0) {\n                return undefined;\n            }\n        }\n        return 0;\n    };\n    Node.numericCompare = function (a, b) {\n        return a < b ? -1 : a === b ? 0 : a > b ? 1 : undefined;\n    };\n    Node.prototype.blocksVisibility = function () {\n        if (this.visibilityBlocks == null) {\n            this.visibilityBlocks = 0;\n        }\n        return this.visibilityBlocks !== 0;\n    };\n    Node.prototype.addVisibilityBlock = function () {\n        if (this.visibilityBlocks == null) {\n            this.visibilityBlocks = 0;\n        }\n        this.visibilityBlocks = this.visibilityBlocks + 1;\n    };\n    Node.prototype.removeVisibilityBlock = function () {\n        if (this.visibilityBlocks == null) {\n            this.visibilityBlocks = 0;\n        }\n        this.visibilityBlocks = this.visibilityBlocks - 1;\n    };\n    Node.prototype.ensureVisibility = function () {\n        this.nodeVisible = true;\n    };\n    Node.prototype.ensureInvisibility = function () {\n        this.nodeVisible = false;\n    };\n    Node.prototype.isVisible = function () {\n        return this.nodeVisible;\n    };\n    Node.prototype.visibilityInfo = function () {\n        return {\n            visibilityBlocks: this.visibilityBlocks,\n            nodeVisible: this.nodeVisible\n        };\n    };\n    Node.prototype.copyVisibilityInfo = function (info) {\n        if (!info) {\n            return;\n        }\n        this.visibilityBlocks = info.visibilityBlocks;\n        this.nodeVisible = info.nodeVisible;\n    };\n    module.exports = Node;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}