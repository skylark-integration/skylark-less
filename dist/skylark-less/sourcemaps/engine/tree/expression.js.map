{"version":3,"sources":["engine/tree/expression.js"],"names":["Node","require","Paren","Comment","Dimension","MATH","Math","Expression","value","noSpacing","this","Error","prototype","type","accept","visitor","visitArray","eval","context","returnValue","mathOn","isMathOn","inParenthesis","parens","math","STRICT_LEGACY","parensInOp","doubleParen","length","map","e","inCalc","outOfParenthesis","genCSS","output","i","add","throwAwayComments","filter","v","module","exports"],"mappings":";;;;;;;AAAA,IAAIA,KAAOC,QAAQ,UAAWC,MAAQD,QAAQ,WAAYE,QAAUF,QAAQ,aAAcG,UAAYH,QAAQ,eAAgBI,KAAOJ,QAAQ,gBAAgBK,KACzJC,WAAa,SAAUC,EAAOC,GAG9B,GAFAC,KAAKF,MAAQA,EACbE,KAAKD,UAAYA,GACZD,EACD,MAAM,IAAIG,MAAM,2CAGxBJ,WAAWK,UAAY,IAAIZ,KAC3BO,WAAWK,UAAUC,KAAO,aAC5BN,WAAWK,UAAUE,OAAS,SAAUC,GACpCL,KAAKF,MAAQO,EAAQC,WAAWN,KAAKF,QAEzCD,WAAWK,UAAUK,KAAO,SAAUC,GAClC,IAAIC,EAAaC,EAASF,EAAQG,WAAYC,EAAgBZ,KAAKa,SAAWL,EAAQM,OAASnB,KAAKoB,gBAAkBf,KAAKgB,YAAaC,GAAc,EAyBtJ,OAxBIL,GACAJ,EAAQI,gBAERZ,KAAKF,MAAMoB,OAAS,EACpBT,EAAc,IAAIZ,WAAWG,KAAKF,MAAMqB,IAAI,SAAUC,GAClD,OAAKA,EAAEb,KAGAa,EAAEb,KAAKC,GAFHY,IAGXpB,KAAKD,WACoB,IAAtBC,KAAKF,MAAMoB,SACdlB,KAAKF,MAAM,GAAGe,QAAWb,KAAKF,MAAM,GAAGkB,YAAeR,EAAQa,SAC9DJ,GAAc,GAElBR,EAAcT,KAAKF,MAAM,GAAGS,KAAKC,IAEjCC,EAAcT,KAEdY,GACAJ,EAAQc,oBAERtB,KAAKa,SAAUb,KAAKgB,YAAeN,GAAWO,GAAiBR,aAAuBf,YACtFe,EAAc,IAAIjB,MAAMiB,IAErBA,GAEXZ,WAAWK,UAAUqB,OAAS,SAAUf,EAASgB,GAC7C,IAAK,IAAIC,EAAI,EAAGA,EAAIzB,KAAKF,MAAMoB,OAAQO,IACnCzB,KAAKF,MAAM2B,GAAGF,OAAOf,EAASgB,IACzBxB,KAAKD,WAAa0B,EAAI,EAAIzB,KAAKF,MAAMoB,QACtCM,EAAOE,IAAI,MAIvB7B,WAAWK,UAAUyB,kBAAoB,WACrC3B,KAAKF,MAAQE,KAAKF,MAAM8B,OAAO,SAAUC,GACrC,QAASA,aAAapC,YAG9BqC,OAAOC,QAAUlC","file":"../../../engine/tree/expression.js","sourcesContent":["var Node = require('./node'), Paren = require('./paren'), Comment = require('./comment'), Dimension = require('./dimension'), MATH = require('../constants').Math;\nvar Expression = function (value, noSpacing) {\n    this.value = value;\n    this.noSpacing = noSpacing;\n    if (!value) {\n        throw new Error('Expression requires an array parameter');\n    }\n};\nExpression.prototype = new Node();\nExpression.prototype.type = 'Expression';\nExpression.prototype.accept = function (visitor) {\n    this.value = visitor.visitArray(this.value);\n};\nExpression.prototype.eval = function (context) {\n    var returnValue, mathOn = context.isMathOn(), inParenthesis = this.parens && (context.math !== MATH.STRICT_LEGACY || !this.parensInOp), doubleParen = false;\n    if (inParenthesis) {\n        context.inParenthesis();\n    }\n    if (this.value.length > 1) {\n        returnValue = new Expression(this.value.map(function (e) {\n            if (!e.eval) {\n                return e;\n            }\n            return e.eval(context);\n        }), this.noSpacing);\n    } else if (this.value.length === 1) {\n        if (this.value[0].parens && !this.value[0].parensInOp && !context.inCalc) {\n            doubleParen = true;\n        }\n        returnValue = this.value[0].eval(context);\n    } else {\n        returnValue = this;\n    }\n    if (inParenthesis) {\n        context.outOfParenthesis();\n    }\n    if (this.parens && this.parensInOp && !mathOn && !doubleParen && !(returnValue instanceof Dimension)) {\n        returnValue = new Paren(returnValue);\n    }\n    return returnValue;\n};\nExpression.prototype.genCSS = function (context, output) {\n    for (var i = 0; i < this.value.length; i++) {\n        this.value[i].genCSS(context, output);\n        if (!this.noSpacing && i + 1 < this.value.length) {\n            output.add(' ');\n        }\n    }\n};\nExpression.prototype.throwAwayComments = function () {\n    this.value = this.value.filter(function (v) {\n        return !(v instanceof Comment);\n    });\n};\nmodule.exports = Expression;"]}