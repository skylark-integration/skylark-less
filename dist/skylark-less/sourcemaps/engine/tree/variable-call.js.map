{"version":3,"sources":["engine/tree/variable-call.js"],"names":["define","__module__0","__module__1","__module__2","__module__3","__module__4","exports","module","Variable","Ruleset","DetachedRuleset","LessError","VariableCall","variable","index","currentFileInfo","this","_index","_fileInfo","allowRoot","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","prototype","type","eval","context","rules","detachedRuleset","getIndex","fileInfo","error","message","ruleset","value","callEval"],"mappings":";;;;;;;AAAAA,QACI,SACA,aACA,YACA,qBACA,iBACD,SAAUC,EAAaC,EAAaC,EAAaC,EAAaC,GAC7D,aACA,IAAIC,KACAC,GAAWD,YACSE,EAAWN,EAAaO,EAAUN,EAAaO,EAAkBN,EAAaO,EAAYN,EAC9GO,EAAe,SAAUC,EAAUC,EAAOC,GAC1CC,KAAKH,SAAWA,EAChBG,KAAKC,OAASH,EACdE,KAAKE,UAAYH,EACjBC,KAAKG,WAAY,GA8BrB,SAASC,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OA/BAT,EAAac,UAAY,IAPdzB,GAQY0B,KAAO,eAC9Bf,EAAac,UAAUE,KAAO,SAAUC,GACpC,IAAIC,EAAOC,EAAkB,IAAIvB,EAASQ,KAAKH,SAAUG,KAAKgB,WAAYhB,KAAKiB,YAAYL,KAAKC,GAAUK,EAAQ,IAAIvB,GAAYwB,QAAS,oCAAsCnB,KAAKH,WACtL,IAAKkB,EAAgBK,QAAS,CAC1B,GAAIL,EAAgBD,MAChBA,EAAQC,OACL,GAAIT,MAAMC,QAAQQ,GACrBD,EAAQ,IAAIrB,EAAQ,GAAIsB,OACrB,CAAA,IAAIT,MAAMC,QAAQQ,EAAgBM,OAGrC,MAAMH,EAFNJ,EAAQ,IAAIrB,EAAQ,GAAIsB,EAAgBM,OAI5CN,EAAkB,IAAIrB,EAAgBoB,GAE1C,GAAIC,EAAgBK,QAChB,OAAOL,EAAgBO,SAAST,GAEpC,MAAMK,GAEV3B,EAAOD,QAAUM,EAUbQ,EAAkBb,EAAOD,SAClBC,EAAOD,QACTc,EAAkBd,GAChBA,OADN","file":"../../../engine/tree/variable-call.js","sourcesContent":["define([\n    './node',\n    './variable',\n    './ruleset',\n    './detached-ruleset',\n    '../less-error'\n], function (__module__0, __module__1, __module__2, __module__3, __module__4) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var Node = __module__0, Variable = __module__1, Ruleset = __module__2, DetachedRuleset = __module__3, LessError = __module__4;\n    var VariableCall = function (variable, index, currentFileInfo) {\n        this.variable = variable;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.allowRoot = true;\n    };\n    VariableCall.prototype = new Node();\n    VariableCall.prototype.type = 'VariableCall';\n    VariableCall.prototype.eval = function (context) {\n        var rules, detachedRuleset = new Variable(this.variable, this.getIndex(), this.fileInfo()).eval(context), error = new LessError({ message: 'Could not evaluate variable call ' + this.variable });\n        if (!detachedRuleset.ruleset) {\n            if (detachedRuleset.rules) {\n                rules = detachedRuleset;\n            } else if (Array.isArray(detachedRuleset)) {\n                rules = new Ruleset('', detachedRuleset);\n            } else if (Array.isArray(detachedRuleset.value)) {\n                rules = new Ruleset('', detachedRuleset.value);\n            } else {\n                throw error;\n            }\n            detachedRuleset = new DetachedRuleset(rules);\n        }\n        if (detachedRuleset.ruleset) {\n            return detachedRuleset.callEval(context);\n        }\n        throw error;\n    };\n    module.exports = VariableCall;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}