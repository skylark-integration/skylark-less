{"version":3,"sources":["engine/tree/debug-info.js"],"names":["define","exports","module","debugInfo","context","ctx","lineSeparator","result","dumpLineNumbers","compress","asComment","asMediaQuery","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","lineNumber","fileName","filenameWithProtocol","test","replace","a"],"mappings":";;;;;;;AAAAA,UAAW,WACP,aACA,IAAIC,KACAC,GAAWD,YACXE,EAAY,SAAUC,EAASC,EAAKC,GACpC,IAAIC,EAAS,GACb,GAAIH,EAAQI,kBAAoBJ,EAAQK,SACpC,OAAQL,EAAQI,iBAChB,IAAK,WACDD,EAASJ,EAAUO,UAAUL,GAC7B,MACJ,IAAK,aACDE,EAASJ,EAAUQ,aAAaN,GAChC,MACJ,IAAK,MACDE,EAASJ,EAAUO,UAAUL,IAAQC,GAAiB,IAAMH,EAAUQ,aAAaN,GAI3F,OAAOE,GAwBX,SAASK,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAzBAV,EAAUO,UAAY,SAAUL,GAC5B,MAAO,WAAaA,EAAIF,UAAUe,WAAa,KAAOb,EAAIF,UAAUgB,SAAW,SAEnFhB,EAAUQ,aAAe,SAAUN,GAC/B,IAAIe,EAAuBf,EAAIF,UAAUgB,SAIzC,MAHK,gBAAgBE,KAAKD,KACtBA,EAAuB,UAAYA,GAEhC,gDAAkDA,EAAqBE,QAAQ,cAAe,SAAUC,GAI3G,MAHS,MAALA,IACAA,EAAI,KAED,KAAOA,IACb,4BAA8BlB,EAAIF,UAAUe,WAAa,QAElEhB,EAAOD,QAAUE,EAUbS,EAAkBV,EAAOD,SAClBC,EAAOD,QACTW,EAAkBX,GAChBA,OADN","file":"../../../engine/tree/debug-info.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var debugInfo = function (context, ctx, lineSeparator) {\n        var result = '';\n        if (context.dumpLineNumbers && !context.compress) {\n            switch (context.dumpLineNumbers) {\n            case 'comments':\n                result = debugInfo.asComment(ctx);\n                break;\n            case 'mediaquery':\n                result = debugInfo.asMediaQuery(ctx);\n                break;\n            case 'all':\n                result = debugInfo.asComment(ctx) + (lineSeparator || '') + debugInfo.asMediaQuery(ctx);\n                break;\n            }\n        }\n        return result;\n    };\n    debugInfo.asComment = function (ctx) {\n        return '/* line ' + ctx.debugInfo.lineNumber + ', ' + ctx.debugInfo.fileName + ' */\\n';\n    };\n    debugInfo.asMediaQuery = function (ctx) {\n        var filenameWithProtocol = ctx.debugInfo.fileName;\n        if (!/^[a-z]+:\\/\\//i.test(filenameWithProtocol)) {\n            filenameWithProtocol = 'file://' + filenameWithProtocol;\n        }\n        return '@media -sass-debug-info{filename{font-family:' + filenameWithProtocol.replace(/([.:\\/\\\\])/g, function (a) {\n            if (a == '\\\\') {\n                a = '/';\n            }\n            return '\\\\' + a;\n        }) + '}line{font-family:\\\\00003' + ctx.debugInfo.lineNumber + '}}\\n';\n    };\n    module.exports = debugInfo;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}