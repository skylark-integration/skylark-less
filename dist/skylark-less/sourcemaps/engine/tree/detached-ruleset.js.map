{"version":3,"sources":["engine/tree/detached-ruleset.js"],"names":["define","__module__0","__module__1","__module__2","exports","module","contexts","utils","DetachedRuleset","ruleset","frames","this","setParent","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","prototype","type","evalFirst","accept","visitor","visit","eval","context","copyArray","callEval","Eval","concat"],"mappings":";;;;;;;AAAAA,QACI,SACA,cACA,YACD,SAAUC,EAAaC,EAAaC,GACnC,aACA,IAAIC,KACAC,GAAWD,YACSE,EAAWJ,EAAaK,EAAQJ,EACpDK,EAAkB,SAAUC,EAASC,GACrCC,KAAKF,QAAUA,EACfE,KAAKD,OAASA,EACdC,KAAKC,UAAUD,KAAKF,QAASE,OAsBjC,SAASE,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAvBAN,EAAgBW,UAAY,IANjBlB,GAOemB,KAAO,kBACjCZ,EAAgBW,UAAUE,WAAY,EACtCb,EAAgBW,UAAUG,OAAS,SAAUC,GACzCZ,KAAKF,QAAUc,EAAQC,MAAMb,KAAKF,UAEtCD,EAAgBW,UAAUM,KAAO,SAAUC,GACvC,IAAIhB,EAASC,KAAKD,QAAUH,EAAMoB,UAAUD,EAAQhB,QACpD,OAAO,IAAIF,EAAgBG,KAAKF,QAASC,IAE7CF,EAAgBW,UAAUS,SAAW,SAAUF,GAC3C,OAAOf,KAAKF,QAAQgB,KAAKd,KAAKD,OAAS,IAAIJ,EAASuB,KAAKH,EAASf,KAAKD,OAAOoB,OAAOJ,EAAQhB,SAAWgB,IAE5GrB,EAAOD,QAAUI,EAUbK,EAAkBR,EAAOD,SAClBC,EAAOD,QACTS,EAAkBT,GAChBA,OADN","file":"../../../engine/tree/detached-ruleset.js","sourcesContent":["define([\n    './node',\n    '../contexts',\n    '../utils'\n], function (__module__0, __module__1, __module__2) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var Node = __module__0, contexts = __module__1, utils = __module__2;\n    var DetachedRuleset = function (ruleset, frames) {\n        this.ruleset = ruleset;\n        this.frames = frames;\n        this.setParent(this.ruleset, this);\n    };\n    DetachedRuleset.prototype = new Node();\n    DetachedRuleset.prototype.type = 'DetachedRuleset';\n    DetachedRuleset.prototype.evalFirst = true;\n    DetachedRuleset.prototype.accept = function (visitor) {\n        this.ruleset = visitor.visit(this.ruleset);\n    };\n    DetachedRuleset.prototype.eval = function (context) {\n        var frames = this.frames || utils.copyArray(context.frames);\n        return new DetachedRuleset(this.ruleset, frames);\n    };\n    DetachedRuleset.prototype.callEval = function (context) {\n        return this.ruleset.eval(this.frames ? new contexts.Eval(context, this.frames.concat(context.frames)) : context);\n    };\n    module.exports = DetachedRuleset;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}