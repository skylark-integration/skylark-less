{"version":3,"sources":["engine/tree/javascript.js"],"names":["define","__module__0","__module__1","__module__2","__module__3","exports","module","Dimension","Quoted","Anonymous","JavaScript","string","escaped","index","currentFileInfo","this","expression","_index","_fileInfo","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","prototype","type","eval","context","result","evaluateJavaScript","isNaN","join"],"mappings":";;;;;;;AAAAA,QACI,iBACA,cACA,WACA,eACD,SAAUC,EAAaC,EAAaC,EAAaC,GAChD,aACA,IAAIC,KACAC,GAAWD,YACeE,EAAYL,EAAaM,EAASL,EAAaM,EAAYL,EACrFM,EAAa,SAAUC,EAAQC,EAASC,EAAOC,GAC/CC,KAAKH,QAAUA,EACfG,KAAKC,WAAaL,EAClBI,KAAKE,OAASJ,EACdE,KAAKG,UAAYJ,GAwBrB,SAASK,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAzBAV,EAAWe,UAAY,IAPNxB,GAQIyB,KAAO,aAC5BhB,EAAWe,UAAUE,KAAO,SAAUC,GAClC,IAAIC,EAASd,KAAKe,mBAAmBf,KAAKC,WAAYY,GAClDF,SAAcG,EAClB,MAAa,WAATH,GAAsBK,MAAMF,GAEZ,WAATH,EACA,IAAIlB,EAAO,IAAMqB,EAAS,IAAKA,EAAQd,KAAKH,QAASG,KAAKE,QAC1DI,MAAMC,QAAQO,GACd,IAAIpB,EAAUoB,EAAOG,KAAK,OAE1B,IAAIvB,EAAUoB,GANd,IAAItB,EAAUsB,IAS7BvB,EAAOD,QAAUK,EAUbS,EAAkBb,EAAOD,SAClBC,EAAOD,QACTc,EAAkBd,GAChBA,OADN","file":"../../../engine/tree/javascript.js","sourcesContent":["define([\n    './js-eval-node',\n    './dimension',\n    './quoted',\n    './anonymous'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var JsEvalNode = __module__0, Dimension = __module__1, Quoted = __module__2, Anonymous = __module__3;\n    var JavaScript = function (string, escaped, index, currentFileInfo) {\n        this.escaped = escaped;\n        this.expression = string;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n    };\n    JavaScript.prototype = new JsEvalNode();\n    JavaScript.prototype.type = 'JavaScript';\n    JavaScript.prototype.eval = function (context) {\n        var result = this.evaluateJavaScript(this.expression, context);\n        var type = typeof result;\n        if (type === 'number' && !isNaN(result)) {\n            return new Dimension(result);\n        } else if (type === 'string') {\n            return new Quoted('\"' + result + '\"', result, this.escaped, this._index);\n        } else if (Array.isArray(result)) {\n            return new Anonymous(result.join(', '));\n        } else {\n            return new Anonymous(result);\n        }\n    };\n    module.exports = JavaScript;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}