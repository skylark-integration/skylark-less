{"version":3,"sources":["engine/tree/atrule.js"],"names":["Node","require","Selector","Ruleset","Anonymous","AtRule","name","value","rules","index","currentFileInfo","debugInfo","isRooted","visibilityInfo","i","this","Array","isArray","selectors","createEmptySelectors","length","allowImports","setParent","_index","_fileInfo","copyVisibilityInfo","allowRoot","prototype","type","accept","visitor","visitArray","visit","isRulesetLike","isCharset","genCSS","context","output","add","fileInfo","getIndex","outputRuleset","eval","mediaPathBackup","mediaBlocksBackup","mediaPath","mediaBlocks","root","variable","call","find","apply","arguments","rulesets","ruleCnt","tabLevel","compress","tabSetStr","join","tabRuleStr","module","exports"],"mappings":"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","file":"../../../engine/tree/atrule.js","sourcesContent":["var Node = require('./node'), Selector = require('./selector'), Ruleset = require('./ruleset'), Anonymous = require('./anonymous');\nvar AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\n    var i;\n    this.name = name;\n    this.value = value instanceof Node ? value : value ? new Anonymous(value) : value;\n    if (rules) {\n        if (Array.isArray(rules)) {\n            this.rules = rules;\n        } else {\n            this.rules = [rules];\n            this.rules[0].selectors = new Selector([], null, null, index, currentFileInfo).createEmptySelectors();\n        }\n        for (i = 0; i < this.rules.length; i++) {\n            this.rules[i].allowImports = true;\n        }\n        this.setParent(this.rules, this);\n    }\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.debugInfo = debugInfo;\n    this.isRooted = isRooted || false;\n    this.copyVisibilityInfo(visibilityInfo);\n    this.allowRoot = true;\n};\nAtRule.prototype = new Node();\nAtRule.prototype.type = 'AtRule';\nAtRule.prototype.accept = function (visitor) {\n    var value = this.value, rules = this.rules;\n    if (rules) {\n        this.rules = visitor.visitArray(rules);\n    }\n    if (value) {\n        this.value = visitor.visit(value);\n    }\n};\nAtRule.prototype.isRulesetLike = function () {\n    return this.rules || !this.isCharset();\n};\nAtRule.prototype.isCharset = function () {\n    return '@charset' === this.name;\n};\nAtRule.prototype.genCSS = function (context, output) {\n    var value = this.value, rules = this.rules;\n    output.add(this.name, this.fileInfo(), this.getIndex());\n    if (value) {\n        output.add(' ');\n        value.genCSS(context, output);\n    }\n    if (rules) {\n        this.outputRuleset(context, output, rules);\n    } else {\n        output.add(';');\n    }\n};\nAtRule.prototype.eval = function (context) {\n    var mediaPathBackup, mediaBlocksBackup, value = this.value, rules = this.rules;\n    mediaPathBackup = context.mediaPath;\n    mediaBlocksBackup = context.mediaBlocks;\n    context.mediaPath = [];\n    context.mediaBlocks = [];\n    if (value) {\n        value = value.eval(context);\n    }\n    if (rules) {\n        rules = [rules[0].eval(context)];\n        rules[0].root = true;\n    }\n    context.mediaPath = mediaPathBackup;\n    context.mediaBlocks = mediaBlocksBackup;\n    return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\n};\nAtRule.prototype.variable = function (name) {\n    if (this.rules) {\n        return Ruleset.prototype.variable.call(this.rules[0], name);\n    }\n};\nAtRule.prototype.find = function () {\n    if (this.rules) {\n        return Ruleset.prototype.find.apply(this.rules[0], arguments);\n    }\n};\nAtRule.prototype.rulesets = function () {\n    if (this.rules) {\n        return Ruleset.prototype.rulesets.apply(this.rules[0]);\n    }\n};\nAtRule.prototype.outputRuleset = function (context, output, rules) {\n    var ruleCnt = rules.length, i;\n    context.tabLevel = (context.tabLevel | 0) + 1;\n    if (context.compress) {\n        output.add('{');\n        for (i = 0; i < ruleCnt; i++) {\n            rules[i].genCSS(context, output);\n        }\n        output.add('}');\n        context.tabLevel--;\n        return;\n    }\n    var tabSetStr = '\\n' + Array(context.tabLevel).join('  '), tabRuleStr = tabSetStr + '  ';\n    if (!ruleCnt) {\n        output.add(' {' + tabSetStr + '}');\n    } else {\n        output.add(' {' + tabRuleStr);\n        rules[0].genCSS(context, output);\n        for (i = 1; i < ruleCnt; i++) {\n            output.add(tabRuleStr);\n            rules[i].genCSS(context, output);\n        }\n        output.add(tabSetStr + '}');\n    }\n    context.tabLevel--;\n};\nmodule.exports = AtRule;"]}