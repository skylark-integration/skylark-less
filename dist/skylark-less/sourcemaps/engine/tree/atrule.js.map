{"version":3,"sources":["engine/tree/atrule.js"],"names":["define","__module__0","__module__1","__module__2","__module__3","exports","module","Node","Selector","Ruleset","Anonymous","AtRule","name","value","rules","index","currentFileInfo","debugInfo","isRooted","visibilityInfo","i","this","Array","isArray","selectors","createEmptySelectors","length","allowImports","setParent","_index","_fileInfo","copyVisibilityInfo","allowRoot","__isValidToReturn","obj","attr","__isEmptyObject","prototype","type","accept","visitor","visitArray","visit","isRulesetLike","isCharset","genCSS","context","output","add","fileInfo","getIndex","outputRuleset","eval","mediaPathBackup","mediaBlocksBackup","mediaPath","mediaBlocks","root","variable","call","find","apply","arguments","rulesets","ruleCnt","tabLevel","compress","tabSetStr","join","tabRuleStr"],"mappings":"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","file":"../../../engine/tree/atrule.js","sourcesContent":["define([\n    './node',\n    './selector',\n    './ruleset',\n    './anonymous'\n], function (__module__0, __module__1, __module__2, __module__3) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var Node = __module__0, Selector = __module__1, Ruleset = __module__2, Anonymous = __module__3;\n    var AtRule = function (name, value, rules, index, currentFileInfo, debugInfo, isRooted, visibilityInfo) {\n        var i;\n        this.name = name;\n        this.value = value instanceof Node ? value : value ? new Anonymous(value) : value;\n        if (rules) {\n            if (Array.isArray(rules)) {\n                this.rules = rules;\n            } else {\n                this.rules = [rules];\n                this.rules[0].selectors = new Selector([], null, null, index, currentFileInfo).createEmptySelectors();\n            }\n            for (i = 0; i < this.rules.length; i++) {\n                this.rules[i].allowImports = true;\n            }\n            this.setParent(this.rules, this);\n        }\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.debugInfo = debugInfo;\n        this.isRooted = isRooted || false;\n        this.copyVisibilityInfo(visibilityInfo);\n        this.allowRoot = true;\n    };\n    AtRule.prototype = new Node();\n    AtRule.prototype.type = 'AtRule';\n    AtRule.prototype.accept = function (visitor) {\n        var value = this.value, rules = this.rules;\n        if (rules) {\n            this.rules = visitor.visitArray(rules);\n        }\n        if (value) {\n            this.value = visitor.visit(value);\n        }\n    };\n    AtRule.prototype.isRulesetLike = function () {\n        return this.rules || !this.isCharset();\n    };\n    AtRule.prototype.isCharset = function () {\n        return '@charset' === this.name;\n    };\n    AtRule.prototype.genCSS = function (context, output) {\n        var value = this.value, rules = this.rules;\n        output.add(this.name, this.fileInfo(), this.getIndex());\n        if (value) {\n            output.add(' ');\n            value.genCSS(context, output);\n        }\n        if (rules) {\n            this.outputRuleset(context, output, rules);\n        } else {\n            output.add(';');\n        }\n    };\n    AtRule.prototype.eval = function (context) {\n        var mediaPathBackup, mediaBlocksBackup, value = this.value, rules = this.rules;\n        mediaPathBackup = context.mediaPath;\n        mediaBlocksBackup = context.mediaBlocks;\n        context.mediaPath = [];\n        context.mediaBlocks = [];\n        if (value) {\n            value = value.eval(context);\n        }\n        if (rules) {\n            rules = [rules[0].eval(context)];\n            rules[0].root = true;\n        }\n        context.mediaPath = mediaPathBackup;\n        context.mediaBlocks = mediaBlocksBackup;\n        return new AtRule(this.name, value, rules, this.getIndex(), this.fileInfo(), this.debugInfo, this.isRooted, this.visibilityInfo());\n    };\n    AtRule.prototype.variable = function (name) {\n        if (this.rules) {\n            return Ruleset.prototype.variable.call(this.rules[0], name);\n        }\n    };\n    AtRule.prototype.find = function () {\n        if (this.rules) {\n            return Ruleset.prototype.find.apply(this.rules[0], arguments);\n        }\n    };\n    AtRule.prototype.rulesets = function () {\n        if (this.rules) {\n            return Ruleset.prototype.rulesets.apply(this.rules[0]);\n        }\n    };\n    AtRule.prototype.outputRuleset = function (context, output, rules) {\n        var ruleCnt = rules.length, i;\n        context.tabLevel = (context.tabLevel | 0) + 1;\n        if (context.compress) {\n            output.add('{');\n            for (i = 0; i < ruleCnt; i++) {\n                rules[i].genCSS(context, output);\n            }\n            output.add('}');\n            context.tabLevel--;\n            return;\n        }\n        var tabSetStr = '\\n' + Array(context.tabLevel).join('  '), tabRuleStr = tabSetStr + '  ';\n        if (!ruleCnt) {\n            output.add(' {' + tabSetStr + '}');\n        } else {\n            output.add(' {' + tabRuleStr);\n            rules[0].genCSS(context, output);\n            for (i = 1; i < ruleCnt; i++) {\n                output.add(tabRuleStr);\n                rules[i].genCSS(context, output);\n            }\n            output.add(tabSetStr + '}');\n        }\n        context.tabLevel--;\n    };\n    module.exports = AtRule;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}