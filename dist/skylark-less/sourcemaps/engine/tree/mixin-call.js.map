{"version":3,"sources":["engine/tree/mixin-call.js"],"names":["Node","require","Selector","MixinDefinition","defaultFunc","MixinCall","elements","args","index","currentFileInfo","important","this","selector","arguments","_index","_fileInfo","allowRoot","setParent","prototype","type","accept","visitor","visit","length","visitArray","eval","context","mixins","mixin","mixinPath","arg","argValue","i","m","f","isRecursive","isOneFound","candidate","defaultResult","count","originalRuleset","noArgumentsFilter","rules","match","candidates","conditionResult","defFalseEitherCase","defNone","defTrue","defFalse","calcDefGroup","p","namespace","value","matchCondition","expand","Array","isArray","push","name","rule","matchArgs","frames","find","path","group","reset","message","format","getIndex","filename","fileInfo","visibilityInfo","newRules","evalCall","_setVisibilityToReplacement","apply","e","stack","toCSS","trim","replacement","blocksVisibility","addVisibilityBlock","map","a","join","module","exports"],"mappings":"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","file":"../../../engine/tree/mixin-call.js","sourcesContent":["var Node = require('./node'), Selector = require('./selector'), MixinDefinition = require('./mixin-definition'), defaultFunc = require('../functions/default');\nvar MixinCall = function (elements, args, index, currentFileInfo, important) {\n    this.selector = new Selector(elements);\n    this.arguments = args || [];\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.important = important;\n    this.allowRoot = true;\n    this.setParent(this.selector, this);\n};\nMixinCall.prototype = new Node();\nMixinCall.prototype.type = 'MixinCall';\nMixinCall.prototype.accept = function (visitor) {\n    if (this.selector) {\n        this.selector = visitor.visit(this.selector);\n    }\n    if (this.arguments.length) {\n        this.arguments = visitor.visitArray(this.arguments);\n    }\n};\nMixinCall.prototype.eval = function (context) {\n    var mixins, mixin, mixinPath, args = [], arg, argValue, rules = [], match = false, i, m, f, isRecursive, isOneFound, candidates = [], candidate, conditionResult = [], defaultResult, defFalseEitherCase = -1, defNone = 0, defTrue = 1, defFalse = 2, count, originalRuleset, noArgumentsFilter;\n    this.selector = this.selector.eval(context);\n    function calcDefGroup(mixin, mixinPath) {\n        var f, p, namespace;\n        for (f = 0; f < 2; f++) {\n            conditionResult[f] = true;\n            defaultFunc.value(f);\n            for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\n                namespace = mixinPath[p];\n                if (namespace.matchCondition) {\n                    conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\n                }\n            }\n            if (mixin.matchCondition) {\n                conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\n            }\n        }\n        if (conditionResult[0] || conditionResult[1]) {\n            if (conditionResult[0] != conditionResult[1]) {\n                return conditionResult[1] ? defTrue : defFalse;\n            }\n            return defNone;\n        }\n        return defFalseEitherCase;\n    }\n    for (i = 0; i < this.arguments.length; i++) {\n        arg = this.arguments[i];\n        argValue = arg.value.eval(context);\n        if (arg.expand && Array.isArray(argValue.value)) {\n            argValue = argValue.value;\n            for (m = 0; m < argValue.length; m++) {\n                args.push({ value: argValue[m] });\n            }\n        } else {\n            args.push({\n                name: arg.name,\n                value: argValue\n            });\n        }\n    }\n    noArgumentsFilter = function (rule) {\n        return rule.matchArgs(null, context);\n    };\n    for (i = 0; i < context.frames.length; i++) {\n        if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\n            isOneFound = true;\n            for (m = 0; m < mixins.length; m++) {\n                mixin = mixins[m].rule;\n                mixinPath = mixins[m].path;\n                isRecursive = false;\n                for (f = 0; f < context.frames.length; f++) {\n                    if (!(mixin instanceof MixinDefinition) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\n                        isRecursive = true;\n                        break;\n                    }\n                }\n                if (isRecursive) {\n                    continue;\n                }\n                if (mixin.matchArgs(args, context)) {\n                    candidate = {\n                        mixin: mixin,\n                        group: calcDefGroup(mixin, mixinPath)\n                    };\n                    if (candidate.group !== defFalseEitherCase) {\n                        candidates.push(candidate);\n                    }\n                    match = true;\n                }\n            }\n            defaultFunc.reset();\n            count = [\n                0,\n                0,\n                0\n            ];\n            for (m = 0; m < candidates.length; m++) {\n                count[candidates[m].group]++;\n            }\n            if (count[defNone] > 0) {\n                defaultResult = defFalse;\n            } else {\n                defaultResult = defTrue;\n                if (count[defTrue] + count[defFalse] > 1) {\n                    throw {\n                        type: 'Runtime',\n                        message: 'Ambiguous use of `default()` found when matching for `' + this.format(args) + '`',\n                        index: this.getIndex(),\n                        filename: this.fileInfo().filename\n                    };\n                }\n            }\n            for (m = 0; m < candidates.length; m++) {\n                candidate = candidates[m].group;\n                if (candidate === defNone || candidate === defaultResult) {\n                    try {\n                        mixin = candidates[m].mixin;\n                        if (!(mixin instanceof MixinDefinition)) {\n                            originalRuleset = mixin.originalRuleset || mixin;\n                            mixin = new MixinDefinition('', [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\n                            mixin.originalRuleset = originalRuleset;\n                        }\n                        var newRules = mixin.evalCall(context, args, this.important).rules;\n                        this._setVisibilityToReplacement(newRules);\n                        Array.prototype.push.apply(rules, newRules);\n                    } catch (e) {\n                        throw {\n                            message: e.message,\n                            index: this.getIndex(),\n                            filename: this.fileInfo().filename,\n                            stack: e.stack\n                        };\n                    }\n                }\n            }\n            if (match) {\n                return rules;\n            }\n        }\n    }\n    if (isOneFound) {\n        throw {\n            type: 'Runtime',\n            message: 'No matching definition was found for `' + this.format(args) + '`',\n            index: this.getIndex(),\n            filename: this.fileInfo().filename\n        };\n    } else {\n        throw {\n            type: 'Name',\n            message: this.selector.toCSS().trim() + ' is undefined',\n            index: this.getIndex(),\n            filename: this.fileInfo().filename\n        };\n    }\n};\nMixinCall.prototype._setVisibilityToReplacement = function (replacement) {\n    var i, rule;\n    if (this.blocksVisibility()) {\n        for (i = 0; i < replacement.length; i++) {\n            rule = replacement[i];\n            rule.addVisibilityBlock();\n        }\n    }\n};\nMixinCall.prototype.format = function (args) {\n    return this.selector.toCSS().trim() + '(' + (args ? args.map(function (a) {\n        var argValue = '';\n        if (a.name) {\n            argValue += a.name + ':';\n        }\n        if (a.value.toCSS) {\n            argValue += a.value.toCSS();\n        } else {\n            argValue += '???';\n        }\n        return argValue;\n    }).join(', ') : '') + ')';\n};\nmodule.exports = MixinCall;"]}