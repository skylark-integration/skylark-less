{"version":3,"sources":["engine/tree/url.js"],"names":["Node","require","URL","val","index","currentFileInfo","isEvald","this","value","_index","_fileInfo","escapePath","path","replace","match","prototype","type","accept","visitor","visit","genCSS","context","output","add","eval","rootpath","fileInfo","pathRequiresRewrite","quote","rewritePath","normalizePath","urlArgs","indexOf","getIndex","module","exports"],"mappings":";;;;;;;AAAA,IAAIA,KAAOC,QAAQ,UACfC,IAAM,SAAUC,EAAKC,EAAOC,EAAiBC,GAC7CC,KAAKC,MAAQL,EACbI,KAAKE,OAASL,EACdG,KAAKG,UAAYL,EACjBE,KAAKD,QAAUA,GAsCnB,SAASK,WAAWC,GAChB,OAAOA,EAAKC,QAAQ,cAAe,SAAUC,GACzC,MAAO,KAAOA,IAtCtBZ,IAAIa,UAAY,IAAIf,KACpBE,IAAIa,UAAUC,KAAO,MACrBd,IAAIa,UAAUE,OAAS,SAAUC,GAC7BX,KAAKC,MAAQU,EAAQC,MAAMZ,KAAKC,QAEpCN,IAAIa,UAAUK,OAAS,SAAUC,EAASC,GACtCA,EAAOC,IAAI,QACXhB,KAAKC,MAAMY,OAAOC,EAASC,GAC3BA,EAAOC,IAAI,MAEfrB,IAAIa,UAAUS,KAAO,SAAUH,GAC3B,IAAoCI,EAAhCtB,EAAMI,KAAKC,MAAMgB,KAAKH,GAC1B,IAAKd,KAAKD,UAEkB,iBADxBmB,EAAWlB,KAAKmB,YAAcnB,KAAKmB,WAAWD,WACW,iBAAdtB,EAAIK,OAAsBa,EAAQM,oBAAoBxB,EAAIK,QAC5FL,EAAIyB,QACLH,EAAWd,WAAWc,IAE1BtB,EAAIK,MAAQa,EAAQQ,YAAY1B,EAAIK,MAAOiB,IAE3CtB,EAAIK,MAAQa,EAAQS,cAAc3B,EAAIK,OAEtCa,EAAQU,UACH5B,EAAIK,MAAMM,MAAM,cAAc,CAC/B,IACIiB,IADwC,IAA5B5B,EAAIK,MAAMwB,QAAQ,KAAc,IAAM,KAC5BX,EAAQU,SACF,IAA5B5B,EAAIK,MAAMwB,QAAQ,KAClB7B,EAAIK,MAAQL,EAAIK,MAAMK,QAAQ,IAAKkB,EAAU,KAE7C5B,EAAIK,OAASuB,EAK7B,OAAO,IAAI7B,IAAIC,EAAKI,KAAK0B,WAAY1B,KAAKmB,YAAY,IAO1DQ,OAAOC,QAAUjC","file":"../../../engine/tree/url.js","sourcesContent":["var Node = require('./node');\nvar URL = function (val, index, currentFileInfo, isEvald) {\n    this.value = val;\n    this._index = index;\n    this._fileInfo = currentFileInfo;\n    this.isEvald = isEvald;\n};\nURL.prototype = new Node();\nURL.prototype.type = 'Url';\nURL.prototype.accept = function (visitor) {\n    this.value = visitor.visit(this.value);\n};\nURL.prototype.genCSS = function (context, output) {\n    output.add('url(');\n    this.value.genCSS(context, output);\n    output.add(')');\n};\nURL.prototype.eval = function (context) {\n    var val = this.value.eval(context), rootpath;\n    if (!this.isEvald) {\n        rootpath = this.fileInfo() && this.fileInfo().rootpath;\n        if (typeof rootpath === 'string' && typeof val.value === 'string' && context.pathRequiresRewrite(val.value)) {\n            if (!val.quote) {\n                rootpath = escapePath(rootpath);\n            }\n            val.value = context.rewritePath(val.value, rootpath);\n        } else {\n            val.value = context.normalizePath(val.value);\n        }\n        if (context.urlArgs) {\n            if (!val.value.match(/^\\s*data:/)) {\n                var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\n                var urlArgs = delimiter + context.urlArgs;\n                if (val.value.indexOf('#') !== -1) {\n                    val.value = val.value.replace('#', urlArgs + '#');\n                } else {\n                    val.value += urlArgs;\n                }\n            }\n        }\n    }\n    return new URL(val, this.getIndex(), this.fileInfo(), true);\n};\nfunction escapePath(path) {\n    return path.replace(/[\\(\\)'\"\\s]/g, function (match) {\n        return '\\\\' + match;\n    });\n}\nmodule.exports = URL;"]}