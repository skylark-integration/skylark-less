{"version":3,"sources":["engine/tree/url.js"],"names":["define","__module__0","exports","module","URL","val","index","currentFileInfo","isEvald","this","value","_index","_fileInfo","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","prototype","type","accept","visitor","visit","genCSS","context","output","add","eval","rootpath","fileInfo","pathRequiresRewrite","quote","replace","match","rewritePath","normalizePath","urlArgs","indexOf","getIndex"],"mappings":";;;;;;;AAAAA,QAAQ,UAAW,SAAUC,GACzB,aACA,IAAIC,KACAC,GAAWD,YAEXE,EAAM,SAAUC,EAAKC,EAAOC,EAAiBC,GAC7CC,KAAKC,MAAQL,EACbI,KAAKE,OAASL,EACdG,KAAKG,UAAYL,EACjBE,KAAKD,QAAUA,GAkDnB,SAASK,EAAkBC,GACvB,MAAqB,iBAAPA,GAAmBC,MAAMC,QAAQF,KAPnD,SAAyBA,GACrB,IAAIG,EACJ,IAAKA,KAAQH,EACT,OAAO,EACX,OAAO,EAGiDI,CAAgBJ,GAE5E,OAnDAV,EAAIe,UAAY,IAPLlB,GAQGmB,KAAO,MACrBhB,EAAIe,UAAUE,OAAS,SAAUC,GAC7Bb,KAAKC,MAAQY,EAAQC,MAAMd,KAAKC,QAEpCN,EAAIe,UAAUK,OAAS,SAAUC,EAASC,GACtCA,EAAOC,IAAI,QACXlB,KAAKC,MAAMc,OAAOC,EAASC,GAC3BA,EAAOC,IAAI,MAEfvB,EAAIe,UAAUS,KAAO,SAAUH,GAC3B,IAAoCI,EAAhCxB,EAAMI,KAAKC,MAAMkB,KAAKH,GAC1B,IAAKhB,KAAKD,UAEkB,iBADxBqB,EAAWpB,KAAKqB,YAAcrB,KAAKqB,WAAWD,WACW,iBAAdxB,EAAIK,OAAsBe,EAAQM,oBAAoB1B,EAAIK,QAC5FL,EAAI2B,QACLH,EAAsBA,EAqBtBI,QAAQ,cAAe,SAAUC,GACzC,MAAO,KAAOA,KApBV7B,EAAIK,MAAQe,EAAQU,YAAY9B,EAAIK,MAAOmB,IAE3CxB,EAAIK,MAAQe,EAAQW,cAAc/B,EAAIK,OAEtCe,EAAQY,UACHhC,EAAIK,MAAMwB,MAAM,cAAc,CAC/B,IACIG,IADwC,IAA5BhC,EAAIK,MAAM4B,QAAQ,KAAc,IAAM,KAC5Bb,EAAQY,SACF,IAA5BhC,EAAIK,MAAM4B,QAAQ,KAClBjC,EAAIK,MAAQL,EAAIK,MAAMuB,QAAQ,IAAKI,EAAU,KAE7ChC,EAAIK,OAAS2B,EAK7B,OAAO,IAAIjC,EAAIC,EAAKI,KAAK8B,WAAY9B,KAAKqB,YAAY,IAO1D3B,EAAOD,QAAUE,EAUbS,EAAkBV,EAAOD,SAClBC,EAAOD,QACTW,EAAkBX,GAChBA,OADN","file":"../../../engine/tree/url.js","sourcesContent":["define(['./node'], function (__module__0) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var Node = __module__0;\n    var URL = function (val, index, currentFileInfo, isEvald) {\n        this.value = val;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.isEvald = isEvald;\n    };\n    URL.prototype = new Node();\n    URL.prototype.type = 'Url';\n    URL.prototype.accept = function (visitor) {\n        this.value = visitor.visit(this.value);\n    };\n    URL.prototype.genCSS = function (context, output) {\n        output.add('url(');\n        this.value.genCSS(context, output);\n        output.add(')');\n    };\n    URL.prototype.eval = function (context) {\n        var val = this.value.eval(context), rootpath;\n        if (!this.isEvald) {\n            rootpath = this.fileInfo() && this.fileInfo().rootpath;\n            if (typeof rootpath === 'string' && typeof val.value === 'string' && context.pathRequiresRewrite(val.value)) {\n                if (!val.quote) {\n                    rootpath = escapePath(rootpath);\n                }\n                val.value = context.rewritePath(val.value, rootpath);\n            } else {\n                val.value = context.normalizePath(val.value);\n            }\n            if (context.urlArgs) {\n                if (!val.value.match(/^\\s*data:/)) {\n                    var delimiter = val.value.indexOf('?') === -1 ? '?' : '&';\n                    var urlArgs = delimiter + context.urlArgs;\n                    if (val.value.indexOf('#') !== -1) {\n                        val.value = val.value.replace('#', urlArgs + '#');\n                    } else {\n                        val.value += urlArgs;\n                    }\n                }\n            }\n        }\n        return new URL(val, this.getIndex(), this.fileInfo(), true);\n    };\n    function escapePath(path) {\n        return path.replace(/[\\(\\)'\"\\s]/g, function (match) {\n            return '\\\\' + match;\n        });\n    }\n    module.exports = URL;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}