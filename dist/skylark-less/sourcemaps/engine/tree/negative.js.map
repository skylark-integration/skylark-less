{"version":3,"sources":["engine/tree/negative.js"],"names":["Node","require","Operation","Dimension","Negative","node","this","value","prototype","type","genCSS","context","output","add","eval","isMathOn","module","exports"],"mappings":";;;;;;;AAAA,IAAIA,KAAOC,QAAQ,UAAWC,UAAYD,QAAQ,eAAgBE,UAAYF,QAAQ,eAClFG,SAAW,SAAUC,GACrBC,KAAKC,MAAQF,GAEjBD,SAASI,UAAY,IAAIR,KACzBI,SAASI,UAAUC,KAAO,WAC1BL,SAASI,UAAUE,OAAS,SAAUC,EAASC,GAC3CA,EAAOC,IAAI,KACXP,KAAKC,MAAMG,OAAOC,EAASC,IAE/BR,SAASI,UAAUM,KAAO,SAAUH,GAChC,OAAIA,EAAQI,WACD,IAAIb,UAAU,KACjB,IAAIC,WAAW,GACfG,KAAKC,QACNO,KAAKH,GAEL,IAAIP,SAASE,KAAKC,MAAMO,KAAKH,KAExCK,OAAOC,QAAUb","file":"../../../engine/tree/negative.js","sourcesContent":["var Node = require('./node'), Operation = require('./operation'), Dimension = require('./dimension');\nvar Negative = function (node) {\n    this.value = node;\n};\nNegative.prototype = new Node();\nNegative.prototype.type = 'Negative';\nNegative.prototype.genCSS = function (context, output) {\n    output.add('-');\n    this.value.genCSS(context, output);\n};\nNegative.prototype.eval = function (context) {\n    if (context.isMathOn()) {\n        return new Operation('*', [\n            new Dimension(-1),\n            this.value\n        ]).eval(context);\n    }\n    return new Negative(this.value.eval(context));\n};\nmodule.exports = Negative;"]}