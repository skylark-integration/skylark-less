{"version":3,"sources":["engine/tree/declaration.js"],"names":["define","__module__0","__module__1","__module__2","__module__3","__module__4","exports","module","Node","Value","Keyword","Anonymous","MATH","Math","Declaration","name","value","important","merge","index","currentFileInfo","inline","variable","this","trim","_index","_fileInfo","undefined","charAt","allowRoot","setParent","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","prototype","type","genCSS","context","output","add","compress","fileInfo","getIndex","e","filename","lastRule","eval","prevMath","evaldValue","mathBypass","length","i","n","s","evalName","math","ALWAYS","PARENS_DIVISION","importantScope","push","message","importantResult","pop","makeImportant"],"mappings":"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","file":"../../../engine/tree/declaration.js","sourcesContent":["define([\n    './node',\n    './value',\n    './keyword',\n    './anonymous',\n    '../constants'\n], function (__module__0, __module__1, __module__2, __module__3, __module__4) {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    var Node = __module__0, Value = __module__1, Keyword = __module__2, Anonymous = __module__3, MATH = __module__4.Math;\n    var Declaration = function (name, value, important, merge, index, currentFileInfo, inline, variable) {\n        this.name = name;\n        this.value = value instanceof Node ? value : new Value([value ? new Anonymous(value) : null]);\n        this.important = important ? ' ' + important.trim() : '';\n        this.merge = merge;\n        this._index = index;\n        this._fileInfo = currentFileInfo;\n        this.inline = inline || false;\n        this.variable = variable !== undefined ? variable : name.charAt && name.charAt(0) === '@';\n        this.allowRoot = true;\n        this.setParent(this.value, this);\n    };\n    function evalName(context, name) {\n        var value = '', i, n = name.length, output = {\n                add: function (s) {\n                    value += s;\n                }\n            };\n        for (i = 0; i < n; i++) {\n            name[i].eval(context).genCSS(context, output);\n        }\n        return value;\n    }\n    Declaration.prototype = new Node();\n    Declaration.prototype.type = 'Declaration';\n    Declaration.prototype.genCSS = function (context, output) {\n        output.add(this.name + (context.compress ? ':' : ': '), this.fileInfo(), this.getIndex());\n        try {\n            this.value.genCSS(context, output);\n        } catch (e) {\n            e.index = this._index;\n            e.filename = this._fileInfo.filename;\n            throw e;\n        }\n        output.add(this.important + (this.inline || context.lastRule && context.compress ? '' : ';'), this._fileInfo, this._index);\n    };\n    Declaration.prototype.eval = function (context) {\n        var mathBypass = false, prevMath, name = this.name, evaldValue, variable = this.variable;\n        if (typeof name !== 'string') {\n            name = name.length === 1 && name[0] instanceof Keyword ? name[0].value : evalName(context, name);\n            variable = false;\n        }\n        if (name === 'font' && context.math === MATH.ALWAYS) {\n            mathBypass = true;\n            prevMath = context.math;\n            context.math = MATH.PARENS_DIVISION;\n        }\n        try {\n            context.importantScope.push({});\n            evaldValue = this.value.eval(context);\n            if (!this.variable && evaldValue.type === 'DetachedRuleset') {\n                throw {\n                    message: 'Rulesets cannot be evaluated on a property.',\n                    index: this.getIndex(),\n                    filename: this.fileInfo().filename\n                };\n            }\n            var important = this.important, importantResult = context.importantScope.pop();\n            if (!important && importantResult.important) {\n                important = importantResult.important;\n            }\n            return new Declaration(name, evaldValue, important, this.merge, this.getIndex(), this.fileInfo(), this.inline, variable);\n        } catch (e) {\n            if (typeof e.index !== 'number') {\n                e.index = this.getIndex();\n                e.filename = this.fileInfo().filename;\n            }\n            throw e;\n        } finally {\n            if (mathBypass) {\n                context.math = prevMath;\n            }\n        }\n    };\n    Declaration.prototype.makeImportant = function () {\n        return new Declaration(this.name, this.value, '!important', this.merge, this.getIndex(), this.fileInfo(), this.inline);\n    };\n    module.exports = Declaration;\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}