/**
 * skylark-less - A version of less.js that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylarkui/skylark-less/
 * @license MIT
 */
var utils=require("./utils"),LessError=module.exports=function(t,i,e){Error.call(this);var s=t.filename||e;if(this.message=t.message,this.stack=t.stack,i&&s){var r=i.contents[s],n=utils.getLocation(t.index,r),o=n.line,l=n.column,h=t.call&&utils.getLocation(t.call,r).line,a=r?r.split("\n"):"";if(this.type=t.type||"Syntax",this.filename=s,this.index=t.index,this.line="number"==typeof o?o+1:null,this.column=l,!this.line&&this.stack){var c=this.stack.match(/(<anonymous>|Function):(\d+):(\d+)/);c&&(c[2]&&(this.line=parseInt(c[2])-2),c[3]&&(this.column=parseInt(c[3])))}this.callLine=h+1,this.callExtract=a[h],this.extract=[a[this.line-2],a[this.line-1],a[this.line]]}};if(void 0===Object.create){var F=function(){};F.prototype=Error.prototype,LessError.prototype=new F}else LessError.prototype=Object.create(Error.prototype);LessError.prototype.constructor=LessError,LessError.prototype.toString=function(t){t=t||{};var i="",e=this.extract||[],s=[],r=function(t){return t};if(t.stylize){var n=typeof t.stylize;if("function"!==n)throw Error("options.stylize should be a function, got a "+n+"!");r=t.stylize}if(null!==this.line){if("string"==typeof e[0]&&s.push(r(this.line-1+" "+e[0],"grey")),"string"==typeof e[1]){var o=this.line+" ";e[1]&&(o+=e[1].slice(0,this.column)+r(r(r(e[1].substr(this.column,1),"bold")+e[1].slice(this.column+1),"red"),"inverse")),s.push(o)}"string"==typeof e[2]&&s.push(r(this.line+1+" "+e[2],"grey")),s=s.join("\n")+r("","reset")+"\n"}return i+=r(this.type+"Error: "+this.message,"red"),this.filename&&(i+=r(" in ","red")+this.filename),this.line&&(i+=r(" on line "+this.line+", column "+(this.column+1)+":","grey")),i+="\n"+s,this.callLine&&(i+=r("from ","red")+(this.filename||"")+"/n",i+=r(this.callLine,"grey")+" "+this.callExtract+"/n"),i};
//# sourceMappingURL=../sourcemaps/engine/less-error.js.map
