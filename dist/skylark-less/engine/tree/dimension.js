/**
 * skylark-less - A version of less.js that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylarkui/skylark-less/
 * @license MIT
 */
var Node=require("./node"),unitConversions=require("../data/unit-conversions"),Unit=require("./unit"),Color=require("./color"),Dimension=function(n,t){if(this.value=parseFloat(n),isNaN(this.value))throw new Error("Dimension is not a number.");this.unit=t&&t instanceof Unit?t:new Unit(t?[t]:void 0),this.setParent(this.unit,this)};Dimension.prototype=new Node,Dimension.prototype.type="Dimension",Dimension.prototype.accept=function(n){this.unit=n.visit(this.unit)},Dimension.prototype.eval=function(n){return this},Dimension.prototype.toColor=function(){return new Color([this.value,this.value,this.value])},Dimension.prototype.genCSS=function(n,t){if(n&&n.strictUnits&&!this.unit.isSingular())throw new Error("Multiple units in dimension. Correct the units or use the unit function. Bad unit: "+this.unit.toString());var i=this.fround(n,this.value),e=String(i);if(0!==i&&i<1e-6&&i>-1e-6&&(e=i.toFixed(20).replace(/0+$/,"")),n&&n.compress){if(0===i&&this.unit.isLength())return void t.add(e);i>0&&i<1&&(e=e.substr(1))}t.add(e),this.unit.genCSS(n,t)},Dimension.prototype.operate=function(n,t,i){var e=this._operate(n,t,this.value,i.value),o=this.unit.clone();if("+"===t||"-"===t)if(0===o.numerator.length&&0===o.denominator.length)o=i.unit.clone(),this.unit.backupUnit&&(o.backupUnit=this.unit.backupUnit);else if(0===i.unit.numerator.length&&0===o.denominator.length);else{if(i=i.convertTo(this.unit.usedUnits()),n.strictUnits&&i.unit.toString()!==o.toString())throw new Error("Incompatible units. Change the units or use the unit function. Bad units: '"+o.toString()+"' and '"+i.unit.toString()+"'.");e=this._operate(n,t,this.value,i.value)}else"*"===t?(o.numerator=o.numerator.concat(i.unit.numerator).sort(),o.denominator=o.denominator.concat(i.unit.denominator).sort(),o.cancel()):"/"===t&&(o.numerator=o.numerator.concat(i.unit.denominator).sort(),o.denominator=o.denominator.concat(i.unit.numerator).sort(),o.cancel());return new Dimension(e,o)},Dimension.prototype.compare=function(n){var t,i;if(n instanceof Dimension){if(this.unit.isEmpty()||n.unit.isEmpty())t=this,i=n;else if(t=this.unify(),i=n.unify(),0!==t.unit.compare(i.unit))return;return Node.numericCompare(t.value,i.value)}},Dimension.prototype.unify=function(){return this.convertTo({length:"px",duration:"s",angle:"rad"})},Dimension.prototype.convertTo=function(n){var t,i,e,o,r,s=this.value,u=this.unit.clone(),a={};if("string"==typeof n){for(t in unitConversions)unitConversions[t].hasOwnProperty(n)&&((a={})[t]=n);n=a}for(i in r=function(n,t){return e.hasOwnProperty(n)?(t?s/=e[n]/e[o]:s*=e[n]/e[o],o):n},n)n.hasOwnProperty(i)&&(o=n[i],e=unitConversions[i],u.map(r));return u.cancel(),new Dimension(s,u)},module.exports=Dimension;
//# sourceMappingURL=../../sourcemaps/engine/tree/dimension.js.map
