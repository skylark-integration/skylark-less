/**
 * skylark-less - A version of less.js that ported to running on skylarkjs
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylarkui/skylark-less/
 * @license MIT
 */
define(["../tree/comment","../tree/dimension","../tree/declaration","../tree/expression","../tree/ruleset","../tree/selector","../tree/element","./function-registry"],function(e,r,n,t,a,i,u,s){"use strict";var l={},o={},c=e,v=r,f=n,m=t,p=a,h=i,y=u,w=function(e){return Array.isArray(e.value)?e.value:Array(e)};function d(e){return"object"!=typeof e||Array.isArray(e)||!function(e){var r;for(r in e)return!1;return!0}(e)}return s.addMultiple({_SELF:function(e){return e},extract:function(e,r){return r=r.value-1,w(e)[r]},length:function(e){return new v(w(e).length)},range:function(e,r,n){var t,a,i=1,u=[];r?(a=r,t=e.value,n&&(i=n.value)):(t=1,a=e);for(var s=t;s<=a.value;s+=i)u.push(new v(s,a.unit));return new m(u)},each:function(e,r){var n,t,a=[];t=e.value?Array.isArray(e.value)?e.value:[e.value]:e.ruleset?e.ruleset.rules:e.rules?e.rules:Array.isArray(e)?e:[e];var i="@value",u="@key",s="@index";r.params?(i=r.params[0]&&r.params[0].name,u=r.params[1]&&r.params[1].name,s=r.params[2]&&r.params[2].name,r=r.rules):r=r.ruleset;for(var l=0;l<t.length;l++){var o,m,w=t[l];w instanceof f?(o="string"==typeof w.name?w.name:w.name[0].value,m=w.value):(o=new v(l+1),m=w),w instanceof c||(n=r.rules.slice(0),i&&n.push(new f(i,m,!1,!1,this.index,this.currentFileInfo)),s&&n.push(new f(s,new v(l+1),!1,!1,this.index,this.currentFileInfo)),u&&n.push(new f(u,o,!1,!1,this.index,this.currentFileInfo)),a.push(new p([new h([new y("","&")])],n,r.strictImports,r.visibilityInfo())))}return new p([new h([new y("","&")])],a,r.strictImports,r.visibilityInfo()).eval(this.context)}}),d(o)?o:d(l)?l:void 0});
//# sourceMappingURL=../../sourcemaps/engine/functions/list.js.map
