{"version":3,"sources":["skylark-less.js"],"names":[],"mappingsfile":"../skylark-less.js","sourcesContent":["var addDataAttr = require('./utils').addDataAttr, browser = require('./browser');\nmodule.exports = function (window, options) {\n    var document = window.document;\n    var less = require('../less')();\n    less.options = options;\n    var environment = less.environment, FileManager = require('./file-manager')(options, less.logger), fileManager = new FileManager();\n    environment.addFileManager(fileManager);\n    less.FileManager = FileManager;\n    less.PluginLoader = require('./plugin-loader');\n    require('./log-listener')(less, options);\n    var errors = require('./error-reporting')(window, less, options);\n    var cache = less.cache = options.cache || require('./cache')(window, options, less.logger);\n    require('./image-size')(less.environment);\n    if (options.functions) {\n        less.functions.functionRegistry.addMultiple(options.functions);\n    }\n    var typePattern = /^text\\/(x-)?less$/;\n    function clone(obj) {\n        var cloned = {};\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                cloned[prop] = obj[prop];\n            }\n        }\n        return cloned;\n    }\n    function bind(func, thisArg) {\n        var curryArgs = Array.prototype.slice.call(arguments, 2);\n        return function () {\n            var args = curryArgs.concat(Array.prototype.slice.call(arguments, 0));\n            return func.apply(thisArg, args);\n        };\n    }\n    function loadStyles(modifyVars) {\n        var styles = document.getElementsByTagName('style'), style;\n        for (var i = 0; i < styles.length; i++) {\n            style = styles[i];\n            if (style.type.match(typePattern)) {\n                var instanceOptions = clone(options);\n                instanceOptions.modifyVars = modifyVars;\n                var lessText = style.innerHTML || '';\n                instanceOptions.filename = document.location.href.replace(/#.*$/, '');\n                less.render(lessText, instanceOptions, bind(function (style, e, result) {\n                    if (e) {\n                        errors.add(e, 'inline');\n                    } else {\n                        style.type = 'text/css';\n                        if (style.styleSheet) {\n                            style.styleSheet.cssText = result.css;\n                        } else {\n                            style.innerHTML = result.css;\n                        }\n                    }\n                }, null, style));\n            }\n        }\n    }\n    function loadStyleSheet(sheet, callback, reload, remaining, modifyVars) {\n        var instanceOptions = clone(options);\n        addDataAttr(instanceOptions, sheet);\n        instanceOptions.mime = sheet.type;\n        if (modifyVars) {\n            instanceOptions.modifyVars = modifyVars;\n        }\n        function loadInitialFileCallback(loadedFile) {\n            var data = loadedFile.contents, path = loadedFile.filename, webInfo = loadedFile.webInfo;\n            var newFileInfo = {\n                currentDirectory: fileManager.getPath(path),\n                filename: path,\n                rootFilename: path,\n                rewriteUrls: instanceOptions.rewriteUrls\n            };\n            newFileInfo.entryPath = newFileInfo.currentDirectory;\n            newFileInfo.rootpath = instanceOptions.rootpath || newFileInfo.currentDirectory;\n            if (webInfo) {\n                webInfo.remaining = remaining;\n                var css = cache.getCSS(path, webInfo, instanceOptions.modifyVars);\n                if (!reload && css) {\n                    webInfo.local = true;\n                    callback(null, css, data, sheet, webInfo, path);\n                    return;\n                }\n            }\n            errors.remove(path);\n            instanceOptions.rootFileInfo = newFileInfo;\n            less.render(data, instanceOptions, function (e, result) {\n                if (e) {\n                    e.href = path;\n                    callback(e);\n                } else {\n                    cache.setCSS(sheet.href, webInfo.lastModified, instanceOptions.modifyVars, result.css);\n                    callback(null, result.css, data, sheet, webInfo, path);\n                }\n            });\n        }\n        fileManager.loadFile(sheet.href, null, instanceOptions, environment).then(function (loadedFile) {\n            loadInitialFileCallback(loadedFile);\n        }).catch(function (err) {\n            console.log(err);\n            callback(err);\n        });\n    }\n    function loadStyleSheets(callback, reload, modifyVars) {\n        for (var i = 0; i < less.sheets.length; i++) {\n            loadStyleSheet(less.sheets[i], callback, reload, less.sheets.length - (i + 1), modifyVars);\n        }\n    }\n    function initRunningMode() {\n        if (less.env === 'development') {\n            less.watchTimer = setInterval(function () {\n                if (less.watchMode) {\n                    fileManager.clearFileCache();\n                    loadStyleSheets(function (e, css, _, sheet, webInfo) {\n                        if (e) {\n                            errors.add(e, e.href || sheet.href);\n                        } else if (css) {\n                            browser.createCSS(window.document, css, sheet);\n                        }\n                    });\n                }\n            }, options.poll);\n        }\n    }\n    less.watch = function () {\n        if (!less.watchMode) {\n            less.env = 'development';\n            initRunningMode();\n        }\n        this.watchMode = true;\n        return true;\n    };\n    less.unwatch = function () {\n        clearInterval(less.watchTimer);\n        this.watchMode = false;\n        return false;\n    };\n    less.registerStylesheetsImmediately = function () {\n        var links = document.getElementsByTagName('link');\n        less.sheets = [];\n        for (var i = 0; i < links.length; i++) {\n            if (links[i].rel === 'stylesheet/less' || links[i].rel.match(/stylesheet/) && links[i].type.match(typePattern)) {\n                less.sheets.push(links[i]);\n            }\n        }\n    };\n    less.registerStylesheets = function () {\n        return new Promise(function (resolve, reject) {\n            less.registerStylesheetsImmediately();\n            resolve();\n        });\n    };\n    less.modifyVars = function (record) {\n        return less.refresh(true, record, false);\n    };\n    less.refresh = function (reload, modifyVars, clearFileCache) {\n        if ((reload || clearFileCache) && clearFileCache !== false) {\n            fileManager.clearFileCache();\n        }\n        return new Promise(function (resolve, reject) {\n            var startTime, endTime, totalMilliseconds, remainingSheets;\n            startTime = endTime = new Date();\n            remainingSheets = less.sheets.length;\n            if (remainingSheets === 0) {\n                endTime = new Date();\n                totalMilliseconds = endTime - startTime;\n                less.logger.info('Less has finished and no sheets were loaded.');\n                resolve({\n                    startTime: startTime,\n                    endTime: endTime,\n                    totalMilliseconds: totalMilliseconds,\n                    sheets: less.sheets.length\n                });\n            } else {\n                loadStyleSheets(function (e, css, _, sheet, webInfo) {\n                    if (e) {\n                        errors.add(e, e.href || sheet.href);\n                        reject(e);\n                        return;\n                    }\n                    if (webInfo.local) {\n                        less.logger.info('Loading ' + sheet.href + ' from cache.');\n                    } else {\n                        less.logger.info('Rendered ' + sheet.href + ' successfully.');\n                    }\n                    browser.createCSS(window.document, css, sheet);\n                    less.logger.info('CSS for ' + sheet.href + ' generated in ' + (new Date() - endTime) + 'ms');\n                    remainingSheets--;\n                    if (remainingSheets === 0) {\n                        totalMilliseconds = new Date() - startTime;\n                        less.logger.info('Less has finished. CSS generated in ' + totalMilliseconds + 'ms');\n                        resolve({\n                            startTime: startTime,\n                            endTime: endTime,\n                            totalMilliseconds: totalMilliseconds,\n                            sheets: less.sheets.length\n                        });\n                    }\n                    endTime = new Date();\n                }, reload, modifyVars);\n            }\n            loadStyles(modifyVars);\n        });\n    };\n    less.refreshStyles = loadStyles;\n    return less;\n};\ndefine(\"skylark-less/browser/index\", function(){});\n\ndefine('skylark-less/less',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"./browser/index\"\r\n],function(skylark,less){\r\n\treturn skylark.less = less;\r\n});\ndefine('skylark-less/main',[\r\n\t\"./less\"\r\n],function(less){\r\n\treturn less;\r\n});\ndefine('skylark-less', ['skylark-less/main'], function (main) { return main; });\n\n"]}